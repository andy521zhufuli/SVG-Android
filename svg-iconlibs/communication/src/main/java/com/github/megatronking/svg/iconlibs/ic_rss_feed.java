package com.github.megatronking.svg.iconlibs;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class ic_rss_feed extends SVGRenderer {

    public ic_rss_feed(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = dip2px(24.0f);
        mHeight = dip2px(24.0f);
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        final float scaleX = w / 24.0f;
        final float scaleY = h / 24.0f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(6.18f, 17.82f);
        mPath.rMoveTo(-2.18f, 0.0f);
        mPath.cubicTo(3.9998474f, 17.359602f, 4.1455474f, 16.91078f, 4.4160886f, 16.538258f);
        mPath.cubicTo(4.6866293f, 16.165733f, 5.068351f, 15.88832f, 5.5062056f, 15.74602f);
        mPath.cubicTo(5.9440603f, 15.603721f, 6.415939f, 15.603721f, 6.853794f, 15.74602f);
        mPath.cubicTo(7.291649f, 15.88832f, 7.67337f, 16.165733f, 7.943911f, 16.538258f);
        mPath.cubicTo(8.214452f, 16.91078f, 8.360152f, 17.359602f, 8.36f, 17.82f);
        mPath.cubicTo(8.36f, 18.39795f, 8.130165f, 18.95282f, 7.7214923f, 19.361492f);
        mPath.cubicTo(7.31282f, 19.770164f, 6.75795f, 20.0f, 6.1799994f, 20.0f);
        mPath.cubicTo(5.6020494f, 20.0f, 5.047179f, 19.770164f, 4.638507f, 19.361492f);
        mPath.cubicTo(4.229834f, 18.95282f, 3.9999995f, 18.39795f, 3.9999995f, 17.82f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(4.0f, 4.44f);
        mPath.rLineTo(0f, 2.83f);
        mPath.rCubicTo(7.03f, 0.0f, 12.73f, 5.7f, 12.73f, 12.73f);
        mPath.rLineTo(2.83f, 0f);
        mPath.rCubicTo(0.0f, -8.59f, -6.97f, -15.56f, -15.56f, -15.56f);
        mPath.close();
        mPath.moveTo(4.0f, 4.44f);
        mPath.rMoveTo(0.0f, 5.66f);
        mPath.rLineTo(0f, 2.83f);
        mPath.rCubicTo(3.9f, 0.0f, 7.07f, 3.17f, 7.07f, 7.07f);
        mPath.rLineTo(2.83f, 0f);
        mPath.rCubicTo(0.0f, -5.47f, -4.43f, -9.9f, -9.9f, -9.9f);
        mPath.close();
        mPath.moveTo(4.0f, 10.1f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}