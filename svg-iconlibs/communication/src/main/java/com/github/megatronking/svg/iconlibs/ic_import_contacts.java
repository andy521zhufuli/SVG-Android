package com.github.megatronking.svg.iconlibs;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class ic_import_contacts extends SVGRenderer {

    public ic_import_contacts(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = dip2px(24.0f);
        mHeight = dip2px(24.0f);
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        final float scaleX = w / 24.0f;
        final float scaleY = h / 24.0f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(21.0f, 5.0f);
        mPath.rCubicTo(-1.11f, -0.35f, -2.33f, -0.5f, -3.5f, -0.5f);
        mPath.rCubicTo(-1.95f, 0.0f, -4.05f, 0.4f, -5.5f, 1.5f);
        mPath.rCubicTo(-1.45f, -1.1f, -3.55f, -1.5f, -5.5f, -1.5f);
        mPath.cubicTo(4.55f, 4.5f, 2.45f, 4.9f, 1.0f, 6.0f);
        mPath.rLineTo(0f, 14.65f);
        mPath.rCubicTo(0.0f, 0.25f, 0.25f, 0.5f, 0.5f, 0.5f);
        mPath.rCubicTo(0.1f, 0.0f, 0.15f, -0.05f, 0.25f, -0.05f);
        mPath.cubicTo(3.1f, 20.45f, 5.05f, 20.0f, 6.5f, 20.0f);
        mPath.rCubicTo(1.95f, 0.0f, 4.05f, 0.4f, 5.5f, 1.5f);
        mPath.rCubicTo(1.35f, -0.85f, 3.8f, -1.5f, 5.5f, -1.5f);
        mPath.rCubicTo(1.65f, 0.0f, 3.35f, 0.3f, 4.75f, 1.05f);
        mPath.rCubicTo(0.1f, 0.05f, 0.15f, 0.05f, 0.25f, 0.05f);
        mPath.rCubicTo(0.25f, 0.0f, 0.5f, -0.25f, 0.5f, -0.5f);
        mPath.lineTo(23.0f, 6.0f);
        mPath.rCubicTo(-0.6f, -0.45f, -1.25f, -0.75f, -2.0f, -1.0f);
        mPath.close();
        mPath.moveTo(21.0f, 5.0f);
        mPath.rMoveTo(0.0f, 13.5f);
        mPath.rCubicTo(-1.1f, -0.35f, -2.3f, -0.5f, -3.5f, -0.5f);
        mPath.rCubicTo(-1.7f, 0.0f, -4.15f, 0.65f, -5.5f, 1.5f);
        mPath.lineTo(12.0f, 8.0f);
        mPath.rCubicTo(1.35f, -0.85f, 3.8f, -1.5f, 5.5f, -1.5f);
        mPath.rCubicTo(1.2f, 0.0f, 2.4f, 0.15f, 3.5f, 0.5f);
        mPath.rLineTo(0f, 11.5f);
        mPath.close();
        mPath.moveTo(21.0f, 18.5f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}