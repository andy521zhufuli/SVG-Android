package com.github.megatronking.svg.iconlibs;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class ic_contact_phone extends SVGRenderer {

    public ic_contact_phone(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = dip2px(24.0f);
        mHeight = dip2px(24.0f);
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        final float scaleX = w / 24.0f;
        final float scaleY = h / 24.0f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(22.0f, 3.0f);
        mPath.lineTo(2.0f, 3.0f);
        mPath.cubicTo(0.9f, 3.0f, 0.0f, 3.9f, 0.0f, 5.0f);
        mPath.rLineTo(0f, 14.0f);
        mPath.rCubicTo(0.0f, 1.1f, 0.9f, 2.0f, 2.0f, 2.0f);
        mPath.rLineTo(20.0f, 0f);
        mPath.rCubicTo(1.1f, 0.0f, 1.99f, -0.9f, 1.99f, -2.0f);
        mPath.lineTo(24.0f, 5.0f);
        mPath.rCubicTo(0.0f, -1.1f, -0.9f, -2.0f, -2.0f, -2.0f);
        mPath.close();
        mPath.moveTo(22.0f, 3.0f);
        mPath.moveTo(8.0f, 6.0f);
        mPath.rCubicTo(1.66f, 0.0f, 3.0f, 1.34f, 3.0f, 3.0f);
        mPath.rCubicTo(0.0f, 1.6599998f, -1.34f, 3.0f, -3.0f, 3.0f);
        mPath.rCubicTo(-1.6599998f, 0.0f, -3.0f, -1.34f, -3.0f, -3.0f);
        mPath.rCubicTo(0.0f, -1.6599998f, 1.34f, -3.0f, 3.0f, -3.0f);
        mPath.close();
        mPath.moveTo(8.0f, 6.0f);
        mPath.rMoveTo(6.0f, 12.0f);
        mPath.lineTo(2.0f, 18.0f);
        mPath.rLineTo(0f, -1.0f);
        mPath.rCubicTo(0.0f, -2.0f, 4.0f, -3.1f, 6.0f, -3.1f);
        mPath.rCubicTo(2.0f, 0.0f, 6.0f, 1.1f, 6.0f, 3.1f);
        mPath.rLineTo(0f, 1.0f);
        mPath.close();
        mPath.moveTo(14.0f, 18.0f);
        mPath.rMoveTo(3.85f, -4.0f);
        mPath.rLineTo(1.64f, 0f);
        mPath.lineTo(21.0f, 16.0f);
        mPath.rLineTo(-1.99f, 1.99f);
        mPath.rCubicTo(-1.31f, -0.98f, -2.28f, -2.38f, -2.73f, -3.99f);
        mPath.rCubicTo(-0.18f, -0.64f, -0.28f, -1.31f, -0.28f, -2.0f);
        mPath.rCubicTo(0.0f, -0.69000053f, 0.1f, -1.36f, 0.28f, -2.0f);
        mPath.rCubicTo(0.45f, -1.62f, 1.42f, -3.01f, 2.73f, -3.99f);
        mPath.lineTo(21.0f, 8.0f);
        mPath.rLineTo(-1.51f, 2.0f);
        mPath.rLineTo(-1.64f, 0f);
        mPath.rCubicTo(-0.22f, 0.63f, -0.35f, 1.3f, -0.35f, 2.0f);
        mPath.rCubicTo(0.0f, 0.6999998f, 0.13f, 1.37f, 0.35f, 2.0f);
        mPath.close();
        mPath.moveTo(17.85f, 14.0f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}