package com.github.megatronking.svg.iconlibs;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class ic_gesture extends SVGRenderer {

    public ic_gesture(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = dip2px(24.0f);
        mHeight = dip2px(24.0f);
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        final float scaleX = w / 24.0f;
        final float scaleY = h / 24.0f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(4.59f, 6.89f);
        mPath.rCubicTo(0.7f, -0.71f, 1.4f, -1.35f, 1.71f, -1.22f);
        mPath.rCubicTo(0.5f, 0.2f, 0.0f, 1.03f, -0.3f, 1.52f);
        mPath.rCubicTo(-0.25f, 0.42f, -2.86f, 3.89f, -2.86f, 6.31f);
        mPath.rCubicTo(0.0f, 1.28f, 0.48f, 2.34f, 1.34f, 2.98f);
        mPath.rCubicTo(0.75f, 0.56f, 1.74f, 0.73f, 2.64f, 0.46f);
        mPath.rCubicTo(1.07f, -0.31f, 1.95f, -1.4f, 3.06f, -2.77f);
        mPath.rCubicTo(1.21f, -1.49f, 2.83f, -3.44f, 4.08f, -3.44f);
        mPath.rCubicTo(1.63f, 0.0f, 1.65f, 1.01f, 1.76f, 1.79f);
        mPath.rCubicTo(-3.78f, 0.64f, -5.38f, 3.67f, -5.38f, 5.37f);
        mPath.rCubicTo(0.0f, 1.7f, 1.44f, 3.09f, 3.21f, 3.09f);
        mPath.rCubicTo(1.63f, 0.0f, 4.29f, -1.33f, 4.69f, -6.1f);
        mPath.lineTo(21.0f, 14.879997f);
        mPath.rLineTo(0f, -2.5f);
        mPath.rLineTo(-2.47f, 0f);
        mPath.rCubicTo(-0.15f, -1.65f, -1.09f, -4.2f, -4.03f, -4.2f);
        mPath.rCubicTo(-2.25f, 0.0f, -4.18f, 1.91f, -4.94f, 2.84f);
        mPath.rCubicTo(-0.58f, 0.73f, -2.06f, 2.48f, -2.29f, 2.72f);
        mPath.rCubicTo(-0.25f, 0.3f, -0.68f, 0.84f, -1.11f, 0.84f);
        mPath.rCubicTo(-0.45f, 0.0f, -0.72f, -0.83f, -0.36f, -1.92f);
        mPath.rCubicTo(0.35f, -1.09f, 1.4f, -2.86f, 1.85f, -3.52f);
        mPath.rCubicTo(0.78f, -1.14f, 1.3f, -1.92f, 1.3f, -3.28f);
        mPath.cubicTo(8.95f, 3.69f, 7.31f, 3.0f, 6.44f, 3.0f);
        mPath.cubicTo(5.12f, 3.0f, 3.97f, 4.0f, 3.72f, 4.25f);
        mPath.rCubicTo(-0.36f, 0.36f, -0.66f, 0.66f, -0.88f, 0.93f);
        mPath.rLineTo(1.75f, 1.71f);
        mPath.close();
        mPath.moveTo(4.59f, 6.89f);
        mPath.rMoveTo(9.29f, 11.66f);
        mPath.rCubicTo(-0.31f, 0.0f, -0.74f, -0.26f, -0.74f, -0.72f);
        mPath.rCubicTo(0.0f, -0.6f, 0.73f, -2.2f, 2.87f, -2.76f);
        mPath.rCubicTo(-0.3f, 2.69f, -1.43f, 3.48f, -2.13f, 3.48f);
        mPath.close();
        mPath.moveTo(13.88f, 18.55f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}