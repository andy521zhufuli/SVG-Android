package com.github.megatronking.svg.iconlibs;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class ic_group_add extends SVGRenderer {

    public ic_group_add(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = dip2px(24.0f);
        mHeight = dip2px(24.0f);
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        final float scaleX = w / 24.0f;
        final float scaleY = h / 24.0f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(8.0f, 10.0f);
        mPath.lineTo(5.0f, 10.0f);
        mPath.lineTo(5.0f, 7.0f);
        mPath.lineTo(3.0f, 7.0f);
        mPath.rLineTo(0f, 3.0f);
        mPath.lineTo(0.0f, 10.0f);
        mPath.rLineTo(0f, 2.0f);
        mPath.rLineTo(3.0f, 0f);
        mPath.rLineTo(0f, 3.0f);
        mPath.rLineTo(2.0f, 0f);
        mPath.rLineTo(0f, -3.0f);
        mPath.rLineTo(3.0f, 0f);
        mPath.rLineTo(0f, -2.0f);
        mPath.close();
        mPath.moveTo(8.0f, 10.0f);
        mPath.rMoveTo(10.0f, 1.0f);
        mPath.rCubicTo(1.66f, 0.0f, 2.99f, -1.34f, 2.99f, -3.0f);
        mPath.cubicTo(20.99f, 6.34f, 19.66f, 5.0f, 18.0f, 5.0f);
        mPath.rCubicTo(-0.32f, 0.0f, -0.63f, 0.05f, -0.91f, 0.14f);
        mPath.rCubicTo(0.57f, 0.81f, 0.9f, 1.79f, 0.9f, 2.86f);
        mPath.rCubicTo(0.0f, 1.0700002f, -0.34f, 2.04f, -0.9f, 2.86f);
        mPath.rCubicTo(0.28f, 0.09f, 0.59f, 0.14f, 0.91f, 0.14f);
        mPath.close();
        mPath.moveTo(18.0f, 11.0f);
        mPath.rMoveTo(-5.0f, 0.0f);
        mPath.rCubicTo(1.66f, 0.0f, 2.99f, -1.34f, 2.99f, -3.0f);
        mPath.cubicTo(15.99f, 6.34f, 14.66f, 5.0f, 13.0f, 5.0f);
        mPath.rCubicTo(-1.66f, 0.0f, -3.0f, 1.34f, -3.0f, 3.0f);
        mPath.rCubicTo(0.0f, 1.6599998f, 1.34f, 3.0f, 3.0f, 3.0f);
        mPath.close();
        mPath.moveTo(13.0f, 11.0f);
        mPath.rMoveTo(6.62f, 2.16f);
        mPath.rCubicTo(0.83f, 0.73f, 1.38f, 1.66f, 1.38f, 2.84f);
        mPath.rLineTo(0f, 2.0f);
        mPath.rLineTo(3.0f, 0f);
        mPath.rLineTo(0f, -2.0f);
        mPath.rCubicTo(0.0f, -1.54f, -2.37f, -2.49f, -4.38f, -2.84f);
        mPath.close();
        mPath.moveTo(19.619999f, 13.16f);
        mPath.moveTo(13.0f, 13.0f);
        mPath.rCubicTo(-2.0f, 0.0f, -6.0f, 1.0f, -6.0f, 3.0f);
        mPath.rLineTo(0f, 2.0f);
        mPath.rLineTo(12.0f, 0f);
        mPath.rLineTo(0f, -2.0f);
        mPath.rCubicTo(0.0f, -2.0f, -4.0f, -3.0f, -6.0f, -3.0f);
        mPath.close();
        mPath.moveTo(13.0f, 13.0f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}