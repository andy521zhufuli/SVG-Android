package com.github.megatronking.svg.iconlibs;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class ic_people_outline extends SVGRenderer {

    public ic_people_outline(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = dip2px(24.0f);
        mHeight = dip2px(24.0f);
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        final float scaleX = w / 24.0f;
        final float scaleY = h / 24.0f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(16.5f, 13.0f);
        mPath.rCubicTo(-1.2f, 0.0f, -3.07f, 0.34f, -4.5f, 1.0f);
        mPath.rCubicTo(-1.43f, -0.67f, -3.3f, -1.0f, -4.5f, -1.0f);
        mPath.cubicTo(5.33f, 13.0f, 1.0f, 14.08f, 1.0f, 16.25f);
        mPath.lineTo(1.0f, 19.0f);
        mPath.rLineTo(22.0f, 0f);
        mPath.rLineTo(0f, -2.75f);
        mPath.rCubicTo(0.0f, -2.17f, -4.33f, -3.25f, -6.5f, -3.25f);
        mPath.close();
        mPath.moveTo(16.5f, 13.0f);
        mPath.rMoveTo(-4.0f, 4.5f);
        mPath.rLineTo(-10.0f, 0f);
        mPath.rLineTo(0f, -1.25f);
        mPath.rCubicTo(0.0f, -0.54f, 2.56f, -1.75f, 5.0f, -1.75f);
        mPath.rCubicTo(2.44f, 0.0f, 5.0f, 1.21f, 5.0f, 1.75f);
        mPath.rLineTo(0f, 1.25f);
        mPath.close();
        mPath.moveTo(12.5f, 17.5f);
        mPath.rMoveTo(9.0f, 0.0f);
        mPath.lineTo(14.0f, 17.5f);
        mPath.rLineTo(0f, -1.25f);
        mPath.rCubicTo(0.0f, -0.46f, -0.2f, -0.86f, -0.52f, -1.22f);
        mPath.rCubicTo(0.88f, -0.3f, 1.96f, -0.53f, 3.02f, -0.53f);
        mPath.rCubicTo(2.44f, 0.0f, 5.0f, 1.21f, 5.0f, 1.75f);
        mPath.rLineTo(0f, 1.25f);
        mPath.close();
        mPath.moveTo(21.5f, 17.5f);
        mPath.moveTo(7.5f, 12.0f);
        mPath.rCubicTo(1.93f, 0.0f, 3.5f, -1.57f, 3.5f, -3.5f);
        mPath.cubicTo(11.0f, 6.5699997f, 9.43f, 5.0f, 7.5f, 5.0f);
        mPath.cubicTo(5.5699997f, 5.0f, 4.0f, 6.57f, 4.0f, 8.5f);
        mPath.cubicTo(4.0f, 10.43f, 5.57f, 12.0f, 7.5f, 12.0f);
        mPath.close();
        mPath.moveTo(7.5f, 12.0f);
        mPath.rMoveTo(0.0f, -5.5f);
        mPath.rCubicTo(1.1f, 0.0f, 2.0f, 0.9f, 2.0f, 2.0f);
        mPath.rCubicTo(0.0f, 1.0999999f, -0.9f, 2.0f, -2.0f, 2.0f);
        mPath.rCubicTo(-1.1000004f, 0.0f, -2.0f, -0.9f, -2.0f, -2.0f);
        mPath.rCubicTo(0.0f, -1.1000004f, 0.9f, -2.0f, 2.0f, -2.0f);
        mPath.close();
        mPath.moveTo(7.5f, 6.5f);
        mPath.rMoveTo(9.0f, 5.5f);
        mPath.rCubicTo(1.93f, 0.0f, 3.5f, -1.57f, 3.5f, -3.5f);
        mPath.cubicTo(20.0f, 6.5699997f, 18.43f, 5.0f, 16.5f, 5.0f);
        mPath.cubicTo(14.57f, 5.0f, 13.0f, 6.57f, 13.0f, 8.5f);
        mPath.rCubicTo(0.0f, 1.9299998f, 1.57f, 3.5f, 3.5f, 3.5f);
        mPath.close();
        mPath.moveTo(16.5f, 12.0f);
        mPath.rMoveTo(0.0f, -5.5f);
        mPath.rCubicTo(1.1f, 0.0f, 2.0f, 0.9f, 2.0f, 2.0f);
        mPath.rCubicTo(0.0f, 1.0999999f, -0.9f, 2.0f, -2.0f, 2.0f);
        mPath.rCubicTo(-1.1000004f, 0.0f, -2.0f, -0.9f, -2.0f, -2.0f);
        mPath.rCubicTo(0.0f, -1.1000004f, 0.9f, -2.0f, 2.0f, -2.0f);
        mPath.close();
        mPath.moveTo(16.5f, 6.5f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}