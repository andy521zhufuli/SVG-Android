package com.github.megatronking.svg.iconlibs;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class ic_share extends SVGRenderer {

    public ic_share(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = dip2px(24.0f);
        mHeight = dip2px(24.0f);
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        final float scaleX = w / 24.0f;
        final float scaleY = h / 24.0f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(18.0f, 16.08f);
        mPath.rCubicTo(-0.76f, 0.0f, -1.44f, 0.3f, -1.96f, 0.77f);
        mPath.lineTo(8.91f, 12.7f);
        mPath.rCubicTo(0.05f, -0.23f, 0.09f, -0.46f, 0.09f, -0.7f);
        mPath.rCubicTo(0.0f, -0.23999977f, -0.04f, -0.47f, -0.09f, -0.7f);
        mPath.rLineTo(7.05f, -4.11f);
        mPath.rCubicTo(0.54f, 0.5f, 1.25f, 0.81f, 2.04f, 0.81f);
        mPath.rCubicTo(1.66f, 0.0f, 3.0f, -1.34f, 3.0f, -3.0f);
        mPath.rCubicTo(0.0f, -1.6599998f, -1.34f, -3.0f, -3.0f, -3.0f);
        mPath.rCubicTo(-1.6599998f, 0.0f, -3.0f, 1.34f, -3.0f, 3.0f);
        mPath.rCubicTo(0.0f, 0.24f, 0.04f, 0.47f, 0.09f, 0.7f);
        mPath.lineTo(8.04f, 9.81f);
        mPath.cubicTo(7.5f, 9.31f, 6.79f, 9.0f, 6.0f, 9.0f);
        mPath.rCubicTo(-1.66f, 0.0f, -3.0f, 1.34f, -3.0f, 3.0f);
        mPath.rCubicTo(0.0f, 1.6599998f, 1.34f, 3.0f, 3.0f, 3.0f);
        mPath.rCubicTo(0.79f, 0.0f, 1.5f, -0.31f, 2.04f, -0.81f);
        mPath.rLineTo(7.12f, 4.16f);
        mPath.rCubicTo(-0.05f, 0.21f, -0.08f, 0.43f, -0.08f, 0.65f);
        mPath.rCubicTo(0.0f, 1.61f, 1.31f, 2.92f, 2.92f, 2.92f);
        mPath.rCubicTo(1.61f, 0.0f, 2.92f, -1.31f, 2.92f, -2.92f);
        mPath.rCubicTo(0.0f, -1.6100006f, -1.31f, -2.92f, -2.92f, -2.92f);
        mPath.close();
        mPath.moveTo(18.0f, 16.08f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}