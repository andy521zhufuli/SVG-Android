package com.github.megatronking.svg.iconlibs;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class ic_pool extends SVGRenderer {

    public ic_pool(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = dip2px(24.0f);
        mHeight = dip2px(24.0f);
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        final float scaleX = w / 24.0f;
        final float scaleY = h / 24.0f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(22.0f, 21.0f);
        mPath.rCubicTo(-1.11f, 0.0f, -1.73f, -0.37f, -2.18f, -0.64f);
        mPath.rCubicTo(-0.37f, -0.22f, -0.6f, -0.36f, -1.15f, -0.36f);
        mPath.rCubicTo(-0.56f, 0.0f, -0.78f, 0.13f, -1.15f, 0.36f);
        mPath.rCubicTo(-0.46f, 0.27f, -1.07f, 0.64f, -2.18f, 0.64f);
        mPath.rCubicTo(-1.1100006f, 0.0f, -1.73f, -0.37f, -2.18f, -0.64f);
        mPath.rCubicTo(-0.37f, -0.22f, -0.6f, -0.36f, -1.15f, -0.36f);
        mPath.rCubicTo(-0.56f, 0.0f, -0.78f, 0.13f, -1.15f, 0.36f);
        mPath.rCubicTo(-0.46f, 0.27f, -1.08f, 0.64f, -2.19f, 0.64f);
        mPath.rCubicTo(-1.11f, 0.0f, -1.73f, -0.37f, -2.18f, -0.64f);
        mPath.rCubicTo(-0.37f, -0.23f, -0.6f, -0.36f, -1.15f, -0.36f);
        mPath.rCubicTo(-0.5500002f, 0.0f, -0.78f, 0.13f, -1.15f, 0.36f);
        mPath.rCubicTo(-0.46f, 0.27f, -1.08f, 0.64f, -2.19f, 0.64f);
        mPath.rLineTo(0f, -2.0f);
        mPath.rCubicTo(0.56f, 0.0f, 0.78f, -0.13f, 1.15f, -0.36f);
        mPath.rCubicTo(0.46f, -0.27f, 1.08f, -0.64f, 2.19f, -0.64f);
        mPath.rCubicTo(1.1100001f, 0.0f, 1.73f, 0.37f, 2.18f, 0.64f);
        mPath.rCubicTo(0.37f, 0.23f, 0.59f, 0.36f, 1.15f, 0.36f);
        mPath.rCubicTo(0.56f, 0.0f, 0.78f, -0.13f, 1.15f, -0.36f);
        mPath.rCubicTo(0.46f, -0.27f, 1.08f, -0.64f, 2.19f, -0.64f);
        mPath.rCubicTo(1.11f, 0.0f, 1.73f, 0.37f, 2.18f, 0.64f);
        mPath.rCubicTo(0.37f, 0.22f, 0.6f, 0.36f, 1.15f, 0.36f);
        mPath.rCubicTo(0.54999924f, 0.0f, 0.78f, -0.13f, 1.15f, -0.36f);
        mPath.rCubicTo(0.45f, -0.27f, 1.07f, -0.64f, 2.18f, -0.64f);
        mPath.rCubicTo(1.1100006f, 0.0f, 1.73f, 0.37f, 2.18f, 0.64f);
        mPath.rCubicTo(0.37f, 0.23f, 0.59f, 0.36f, 1.15f, 0.36f);
        mPath.rLineTo(0f, 2.0f);
        mPath.close();
        mPath.moveTo(22.0f, 21.0f);
        mPath.rMoveTo(0.0f, -4.5f);
        mPath.rCubicTo(-1.11f, 0.0f, -1.73f, -0.37f, -2.18f, -0.64f);
        mPath.rCubicTo(-0.37f, -0.22f, -0.6f, -0.36f, -1.15f, -0.36f);
        mPath.rCubicTo(-0.56f, 0.0f, -0.78f, 0.13f, -1.15f, 0.36f);
        mPath.rCubicTo(-0.45f, 0.27f, -1.07f, 0.64f, -2.18f, 0.64f);
        mPath.rCubicTo(-1.1100006f, 0.0f, -1.73f, -0.37f, -2.18f, -0.64f);
        mPath.rCubicTo(-0.37f, -0.22f, -0.6f, -0.36f, -1.15f, -0.36f);
        mPath.rCubicTo(-0.56f, 0.0f, -0.78f, 0.13f, -1.15f, 0.36f);
        mPath.rCubicTo(-0.45f, 0.27f, -1.07f, 0.64f, -2.18f, 0.64f);
        mPath.rCubicTo(-1.1100006f, 0.0f, -1.73f, -0.37f, -2.18f, -0.64f);
        mPath.rCubicTo(-0.37f, -0.22f, -0.6f, -0.36f, -1.15f, -0.36f);
        mPath.rCubicTo(-0.5500002f, 0.0f, -0.78f, 0.13f, -1.15f, 0.36f);
        mPath.rCubicTo(-0.47f, 0.27f, -1.09f, 0.64f, -2.2f, 0.64f);
        mPath.rLineTo(0f, -2.0f);
        mPath.rCubicTo(0.56f, 0.0f, 0.78f, -0.13f, 1.15f, -0.36f);
        mPath.rCubicTo(0.45f, -0.27f, 1.07f, -0.64f, 2.18f, -0.64f);
        mPath.rCubicTo(1.1100001f, 0.0f, 1.73f, 0.37f, 2.18f, 0.64f);
        mPath.rCubicTo(0.37f, 0.22f, 0.6f, 0.36f, 1.15f, 0.36f);
        mPath.rCubicTo(0.56f, 0.0f, 0.78f, -0.13f, 1.15f, -0.36f);
        mPath.rCubicTo(0.45f, -0.27f, 1.07f, -0.64f, 2.18f, -0.64f);
        mPath.rCubicTo(1.1100006f, 0.0f, 1.73f, 0.37f, 2.18f, 0.64f);
        mPath.rCubicTo(0.37f, 0.22f, 0.6f, 0.36f, 1.15f, 0.36f);
        mPath.rCubicTo(0.54999924f, 0.0f, 0.78f, -0.13f, 1.15f, -0.36f);
        mPath.rCubicTo(0.45f, -0.27f, 1.07f, -0.64f, 2.18f, -0.64f);
        mPath.rCubicTo(1.1100006f, 0.0f, 1.73f, 0.37f, 2.18f, 0.64f);
        mPath.rCubicTo(0.37f, 0.22f, 0.6f, 0.36f, 1.15f, 0.36f);
        mPath.rLineTo(0f, 2.0f);
        mPath.close();
        mPath.moveTo(22.0f, 16.5f);
        mPath.moveTo(8.67f, 12.0f);
        mPath.rCubicTo(0.56f, 0.0f, 0.78f, -0.13f, 1.15f, -0.36f);
        mPath.rCubicTo(0.46f, -0.27f, 1.08f, -0.64f, 2.19f, -0.64f);
        mPath.rCubicTo(1.11f, 0.0f, 1.73f, 0.37f, 2.18f, 0.64f);
        mPath.rCubicTo(0.37f, 0.22f, 0.6f, 0.36f, 1.15f, 0.36f);
        mPath.rCubicTo(0.54999924f, 0.0f, 0.78f, -0.13f, 1.15f, -0.36f);
        mPath.rCubicTo(0.12f, -0.07f, 0.26f, -0.15f, 0.41f, -0.23f);
        mPath.lineTo(10.48f, 5.0f);
        mPath.cubicTo(8.93f, 3.45f, 7.5f, 2.99f, 5.0f, 3.0f);
        mPath.rLineTo(0f, 2.5f);
        mPath.rCubicTo(1.82f, -0.01f, 2.89f, 0.39f, 4.0f, 1.5f);
        mPath.rLineTo(1.0f, 1.0f);
        mPath.rLineTo(-3.25f, 3.25f);
        mPath.rCubicTo(0.31f, 0.12f, 0.56f, 0.27f, 0.77f, 0.39f);
        mPath.rCubicTo(0.37f, 0.23f, 0.59f, 0.36f, 1.15f, 0.36f);
        mPath.close();
        mPath.moveTo(8.67f, 12.0f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(16.5f, 5.5f);
        mPath.rMoveTo(-2.5f, 0.0f);
        mPath.cubicTo(14.0f, 4.837213f, 14.263572f, 4.2008944f, 14.732233f, 3.732233f);
        mPath.cubicTo(15.200894f, 3.263572f, 15.8372135f, 3.0f, 16.5f, 3.0f);
        mPath.cubicTo(17.162786f, 3.0f, 17.799107f, 3.263572f, 18.267767f, 3.732233f);
        mPath.cubicTo(18.736427f, 4.2008944f, 19.0f, 4.837213f, 19.0f, 5.5f);
        mPath.cubicTo(19.0f, 6.162787f, 18.736427f, 6.7991056f, 18.267767f, 7.267767f);
        mPath.cubicTo(17.799107f, 7.7364283f, 17.162786f, 8.0f, 16.5f, 8.0f);
        mPath.cubicTo(15.8372135f, 8.0f, 15.200894f, 7.7364283f, 14.732233f, 7.267767f);
        mPath.cubicTo(14.263572f, 6.7991056f, 14.0f, 6.162787f, 14.0f, 5.5f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}