package com.github.megatronking.svg.iconlibs;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class ic_spa extends SVGRenderer {

    public ic_spa(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = dip2px(24.0f);
        mHeight = dip2px(24.0f);
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        final float scaleX = w / 24.0f;
        final float scaleY = h / 24.0f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(8.55f, 12.0f);
        mPath.rCubicTo(-1.07f, -0.71f, -2.25f, -1.27f, -3.53f, -1.61f);
        mPath.rCubicTo(1.28f, 0.34f, 2.46f, 0.9f, 3.53f, 1.61f);
        mPath.close();
        mPath.moveTo(8.55f, 12.0f);
        mPath.rMoveTo(10.43f, -1.61f);
        mPath.rCubicTo(-1.29f, 0.34f, -2.49f, 0.91f, -3.57f, 1.64f);
        mPath.rCubicTo(1.08f, -0.73f, 2.28f, -1.3f, 3.57f, -1.64f);
        mPath.close();
        mPath.moveTo(18.98f, 10.39f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-10453621, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(15.49f, 9.63f);
        mPath.rCubicTo(-0.18f, -2.79f, -1.31f, -5.51f, -3.43f, -7.63f);
        mPath.rCubicTo(-2.14f, 2.14f, -3.32f, 4.86f, -3.55f, 7.63f);
        mPath.rCubicTo(1.28f, 0.68f, 2.46f, 1.56f, 3.49f, 2.63f);
        mPath.rCubicTo(1.03f, -1.06f, 2.21f, -1.94f, 3.49f, -2.63f);
        mPath.close();
        mPath.moveTo(15.49f, 9.63f);
        mPath.rMoveTo(-6.5f, 2.65f);
        mPath.rCubicTo(-0.14f, -0.1f, -0.3f, -0.19f, -0.45f, -0.29f);
        mPath.rCubicTo(0.15f, 0.11f, 0.31f, 0.19f, 0.45f, 0.29f);
        mPath.close();
        mPath.moveTo(8.99f, 12.280001f);
        mPath.rMoveTo(6.42f, -0.25f);
        mPath.rCubicTo(-0.13f, 0.09f, -0.27f, 0.16f, -0.4f, 0.26f);
        mPath.rCubicTo(0.13f, -0.1f, 0.27f, -0.17f, 0.4f, -0.26f);
        mPath.close();
        mPath.moveTo(15.41f, 12.030001f);
        mPath.moveTo(12.0f, 15.45f);
        mPath.cubicTo(9.85f, 12.17f, 6.18f, 10.0f, 2.0f, 10.0f);
        mPath.rCubicTo(0.0f, 5.32f, 3.36f, 9.82f, 8.03f, 11.49f);
        mPath.rCubicTo(0.63f, 0.23f, 1.29f, 0.4f, 1.97f, 0.51f);
        mPath.rCubicTo(0.68f, -0.12f, 1.33f, -0.29f, 1.97f, -0.51f);
        mPath.cubicTo(18.64f, 19.82f, 22.0f, 15.32f, 22.0f, 10.0f);
        mPath.rCubicTo(-4.18f, 0.0f, -7.85f, 2.17f, -10.0f, 5.45f);
        mPath.close();
        mPath.moveTo(12.0f, 15.45f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}