package com.github.megatronking.svg.iconlibs;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class ic_child_care extends SVGRenderer {

    public ic_child_care(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = dip2px(24.0f);
        mHeight = dip2px(24.0f);
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        final float scaleX = w / 24.0f;
        final float scaleY = h / 24.0f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(14.5f, 10.5f);
        mPath.rMoveTo(-1.25f, 0.0f);
        mPath.cubicTo(13.25f, 10.168607f, 13.381786f, 9.850447f, 13.616117f, 9.616117f);
        mPath.cubicTo(13.850447f, 9.381786f, 14.168607f, 9.25f, 14.5f, 9.25f);
        mPath.cubicTo(14.831393f, 9.25f, 15.149553f, 9.381786f, 15.383883f, 9.616117f);
        mPath.cubicTo(15.618214f, 9.850447f, 15.75f, 10.168607f, 15.75f, 10.5f);
        mPath.cubicTo(15.75f, 10.831393f, 15.618214f, 11.149553f, 15.383883f, 11.383883f);
        mPath.cubicTo(15.149553f, 11.618214f, 14.831393f, 11.75f, 14.5f, 11.75f);
        mPath.cubicTo(14.168607f, 11.75f, 13.850447f, 11.618214f, 13.616117f, 11.383883f);
        mPath.cubicTo(13.381786f, 11.149553f, 13.25f, 10.831393f, 13.25f, 10.5f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(9.5f, 10.5f);
        mPath.rMoveTo(-1.25f, 0.0f);
        mPath.cubicTo(8.25f, 10.168607f, 8.381786f, 9.850447f, 8.616117f, 9.616117f);
        mPath.cubicTo(8.850447f, 9.381786f, 9.168607f, 9.25f, 9.5f, 9.25f);
        mPath.cubicTo(9.831393f, 9.25f, 10.149553f, 9.381786f, 10.383883f, 9.616117f);
        mPath.cubicTo(10.618214f, 9.850447f, 10.75f, 10.168607f, 10.75f, 10.5f);
        mPath.cubicTo(10.75f, 10.831393f, 10.618214f, 11.149553f, 10.383883f, 11.383883f);
        mPath.cubicTo(10.149553f, 11.618214f, 9.831393f, 11.75f, 9.5f, 11.75f);
        mPath.cubicTo(9.168607f, 11.75f, 8.850447f, 11.618214f, 8.616117f, 11.383883f);
        mPath.cubicTo(8.381786f, 11.149553f, 8.25f, 10.831393f, 8.25f, 10.5f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(22.94f, 12.66f);
        mPath.rCubicTo(0.04f, -0.21f, 0.06f, -0.43f, 0.06f, -0.66f);
        mPath.rCubicTo(0.0f, -0.22999954f, -0.02f, -0.45f, -0.06f, -0.66f);
        mPath.rCubicTo(-0.25f, -1.51f, -1.36f, -2.74f, -2.81f, -3.17f);
        mPath.rCubicTo(-0.53f, -1.12f, -1.28f, -2.1f, -2.19f, -2.91f);
        mPath.cubicTo(16.36f, 3.85f, 14.28f, 3.0f, 12.0f, 3.0f);
        mPath.rCubicTo(-2.2799997f, 0.0f, -4.36f, 0.85f, -5.94f, 2.26f);
        mPath.rCubicTo(-0.92f, 0.81f, -1.67f, 1.8f, -2.19f, 2.91f);
        mPath.rCubicTo(-1.45f, 0.43f, -2.56f, 1.65f, -2.81f, 3.17f);
        mPath.rCubicTo(-0.04f, 0.21f, -0.06f, 0.43f, -0.06f, 0.66f);
        mPath.rCubicTo(0.0f, 0.22999954f, 0.02f, 0.45f, 0.06f, 0.66f);
        mPath.rCubicTo(0.25f, 1.51f, 1.36f, 2.74f, 2.81f, 3.17f);
        mPath.rCubicTo(0.52f, 1.11f, 1.27f, 2.09f, 2.17f, 2.89f);
        mPath.cubicTo(7.62f, 20.14f, 9.71f, 21.0f, 12.0f, 21.0f);
        mPath.rCubicTo(2.29f, 0.0f, 4.38f, -0.86f, 5.97f, -2.28f);
        mPath.rCubicTo(0.9f, -0.8f, 1.65f, -1.79f, 2.17f, -2.89f);
        mPath.rCubicTo(1.44f, -0.43f, 2.55f, -1.65f, 2.8f, -3.17f);
        mPath.close();
        mPath.moveTo(22.94f, 12.66f);
        mPath.moveTo(19.0f, 14.0f);
        mPath.rCubicTo(-0.1f, 0.0f, -0.19f, -0.02f, -0.29f, -0.03f);
        mPath.rCubicTo(-0.2f, 0.67f, -0.49f, 1.29f, -0.86f, 1.86f);
        mPath.cubicTo(16.6f, 17.74f, 14.45f, 19.0f, 12.0f, 19.0f);
        mPath.rCubicTo(-2.4499998f, 0.0f, -4.6f, -1.26f, -5.85f, -3.17f);
        mPath.rCubicTo(-0.37f, -0.57f, -0.66f, -1.19f, -0.86f, -1.86f);
        mPath.rCubicTo(-0.1f, 0.01f, -0.19f, 0.03f, -0.29f, 0.03f);
        mPath.rCubicTo(-1.1f, 0.0f, -2.0f, -0.9f, -2.0f, -2.0f);
        mPath.rCubicTo(0.0f, -1.1000004f, 0.9f, -2.0f, 2.0f, -2.0f);
        mPath.rCubicTo(0.1f, 0.0f, 0.19f, 0.02f, 0.29f, 0.03f);
        mPath.rCubicTo(0.2f, -0.67f, 0.49f, -1.29f, 0.86f, -1.86f);
        mPath.cubicTo(7.4f, 6.26f, 9.55f, 5.0f, 12.0f, 5.0f);
        mPath.rCubicTo(2.4499998f, 0.0f, 4.6f, 1.26f, 5.85f, 3.17f);
        mPath.rCubicTo(0.37f, 0.57f, 0.66f, 1.19f, 0.86f, 1.86f);
        mPath.rCubicTo(0.1f, -0.01f, 0.19f, -0.03f, 0.29f, -0.03f);
        mPath.rCubicTo(1.1f, 0.0f, 2.0f, 0.9f, 2.0f, 2.0f);
        mPath.rCubicTo(0.0f, 1.1000004f, -0.9f, 2.0f, -2.0f, 2.0f);
        mPath.close();
        mPath.moveTo(19.0f, 14.0f);
        mPath.moveTo(7.5f, 14.0f);
        mPath.rCubicTo(0.76f, 1.77f, 2.49f, 3.0f, 4.5f, 3.0f);
        mPath.rCubicTo(2.0100002f, 0.0f, 3.74f, -1.23f, 4.5f, -3.0f);
        mPath.rLineTo(-9.0f, 0f);
        mPath.close();
        mPath.moveTo(7.5f, 14.0f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}