package com.github.megatronking.svg.iconlibs;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class ic_room_service extends SVGRenderer {

    public ic_room_service(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = dip2px(24.0f);
        mHeight = dip2px(24.0f);
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        final float scaleX = w / 24.0f;
        final float scaleY = h / 24.0f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(2.0f, 17.0f);
        mPath.rLineTo(20.0f, 0f);
        mPath.rLineTo(0f, 2.0f);
        mPath.lineTo(2.0f, 19.0f);
        mPath.close();
        mPath.moveTo(2.0f, 17.0f);
        mPath.rMoveTo(11.84f, -9.21f);
        mPath.rCubicTo(0.1f, -0.24f, 0.16f, -0.51f, 0.16f, -0.79f);
        mPath.rCubicTo(0.0f, -1.1f, -0.9f, -2.0f, -2.0f, -2.0f);
        mPath.rCubicTo(-1.1000004f, 0.0f, -2.0f, 0.9f, -2.0f, 2.0f);
        mPath.rCubicTo(0.0f, 0.28f, 0.06f, 0.55f, 0.16f, 0.79f);
        mPath.cubicTo(6.25f, 8.6f, 3.27f, 11.93f, 3.0f, 16.0f);
        mPath.rLineTo(18.0f, 0f);
        mPath.rCubicTo(-0.27f, -4.07f, -3.25f, -7.4f, -7.16f, -8.21f);
        mPath.close();
        mPath.moveTo(13.84f, 7.79f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}