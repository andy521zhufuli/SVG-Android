package com.github.megatronking.svg.iconlibs;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class ic_local_gas_station extends SVGRenderer {

    public ic_local_gas_station(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = dip2px(24.0f);
        mHeight = dip2px(24.0f);
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        final float scaleX = w / 24.0f;
        final float scaleY = h / 24.0f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(19.77f, 7.23f);
        mPath.rLineTo(0.01f, -0.01f);
        mPath.rLineTo(-3.72f, -3.72f);
        mPath.lineTo(15.0f, 4.56f);
        mPath.rLineTo(2.11f, 2.11f);
        mPath.rCubicTo(-0.94f, 0.36f, -1.61f, 1.26f, -1.61f, 2.33f);
        mPath.rCubicTo(0.0f, 1.38f, 1.12f, 2.5f, 2.5f, 2.5f);
        mPath.rCubicTo(0.36f, 0.0f, 0.69f, -0.08f, 1.0f, -0.21f);
        mPath.rLineTo(0f, 7.21f);
        mPath.rCubicTo(0.0f, 0.55f, -0.45f, 1.0f, -1.0f, 1.0f);
        mPath.rCubicTo(-0.54999924f, 0.0f, -1.0f, -0.45f, -1.0f, -1.0f);
        mPath.lineTo(17.0f, 14.0f);
        mPath.rCubicTo(0.0f, -1.1f, -0.9f, -2.0f, -2.0f, -2.0f);
        mPath.rLineTo(-1.0f, 0f);
        mPath.lineTo(14.0f, 5.0f);
        mPath.rCubicTo(0.0f, -1.1f, -0.9f, -2.0f, -2.0f, -2.0f);
        mPath.lineTo(6.0f, 3.0f);
        mPath.rCubicTo(-1.1f, 0.0f, -2.0f, 0.9f, -2.0f, 2.0f);
        mPath.rLineTo(0f, 16.0f);
        mPath.rLineTo(10.0f, 0f);
        mPath.rLineTo(0f, -7.5f);
        mPath.rLineTo(1.5f, 0f);
        mPath.rLineTo(0f, 5.0f);
        mPath.rCubicTo(0.0f, 1.38f, 1.12f, 2.5f, 2.5f, 2.5f);
        mPath.rCubicTo(1.3799992f, 0.0f, 2.5f, -1.12f, 2.5f, -2.5f);
        mPath.lineTo(20.5f, 9.0f);
        mPath.rCubicTo(0.0f, -0.69f, -0.28f, -1.32f, -0.73f, -1.77f);
        mPath.close();
        mPath.moveTo(19.77f, 7.23f);
        mPath.moveTo(12.0f, 10.0f);
        mPath.lineTo(6.0f, 10.0f);
        mPath.lineTo(6.0f, 5.0f);
        mPath.rLineTo(6.0f, 0f);
        mPath.rLineTo(0f, 5.0f);
        mPath.close();
        mPath.moveTo(12.0f, 10.0f);
        mPath.rMoveTo(6.0f, 0.0f);
        mPath.rCubicTo(-0.55f, 0.0f, -1.0f, -0.45f, -1.0f, -1.0f);
        mPath.rCubicTo(0.0f, -0.5500002f, 0.45f, -1.0f, 1.0f, -1.0f);
        mPath.rCubicTo(0.54999924f, 0.0f, 1.0f, 0.45f, 1.0f, 1.0f);
        mPath.rCubicTo(0.0f, 0.5500002f, -0.45f, 1.0f, -1.0f, 1.0f);
        mPath.close();
        mPath.moveTo(18.0f, 10.0f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}