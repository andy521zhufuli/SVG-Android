package com.github.megatronking.svg.iconlibs;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class ic_directions_boat extends SVGRenderer {

    public ic_directions_boat(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = dip2px(24.0f);
        mHeight = dip2px(24.0f);
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        final float scaleX = w / 24.0f;
        final float scaleY = h / 24.0f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(20.0f, 21.0f);
        mPath.rCubicTo(-1.39f, 0.0f, -2.78f, -0.47f, -4.0f, -1.32f);
        mPath.rCubicTo(-2.44f, 1.71f, -5.56f, 1.71f, -8.0f, 0.0f);
        mPath.cubicTo(6.78f, 20.53f, 5.39f, 21.0f, 4.0f, 21.0f);
        mPath.lineTo(2.0f, 21.0f);
        mPath.rLineTo(0f, 2.0f);
        mPath.rLineTo(2.0f, 0f);
        mPath.rCubicTo(1.38f, 0.0f, 2.74f, -0.35f, 4.0f, -0.99f);
        mPath.rCubicTo(2.52f, 1.29f, 5.48f, 1.29f, 8.0f, 0.0f);
        mPath.rCubicTo(1.26f, 0.65f, 2.62f, 0.99f, 4.0f, 0.99f);
        mPath.rLineTo(2.0f, 0f);
        mPath.rLineTo(0f, -2.0f);
        mPath.rLineTo(-2.0f, 0f);
        mPath.close();
        mPath.moveTo(20.0f, 21.0f);
        mPath.moveTo(3.95f, 19.0f);
        mPath.lineTo(4.0f, 19.0f);
        mPath.rCubicTo(1.6f, 0.0f, 3.02f, -0.88f, 4.0f, -2.0f);
        mPath.rCubicTo(0.98f, 1.12f, 2.4f, 2.0f, 4.0f, 2.0f);
        mPath.rCubicTo(1.6000004f, 0.0f, 3.02f, -0.88f, 4.0f, -2.0f);
        mPath.rCubicTo(0.98f, 1.12f, 2.4f, 2.0f, 4.0f, 2.0f);
        mPath.rLineTo(0.05f, 0f);
        mPath.rLineTo(1.89f, -6.68f);
        mPath.rCubicTo(0.08f, -0.26f, 0.06f, -0.54f, -0.06f, -0.78f);
        mPath.rCubicTo(-0.11999893f, -0.23999977f, -0.34f, -0.42f, -0.6f, -0.5f);
        mPath.lineTo(20.0f, 10.62f);
        mPath.lineTo(20.0f, 6.0f);
        mPath.rCubicTo(0.0f, -1.1f, -0.9f, -2.0f, -2.0f, -2.0f);
        mPath.rLineTo(-3.0f, 0f);
        mPath.lineTo(15.0f, 1.0f);
        mPath.lineTo(9.0f, 1.0f);
        mPath.rLineTo(0f, 3.0f);
        mPath.lineTo(6.0f, 4.0f);
        mPath.rCubicTo(-1.1f, 0.0f, -2.0f, 0.9f, -2.0f, 2.0f);
        mPath.rLineTo(0f, 4.62f);
        mPath.rLineTo(-1.29f, 0.42f);
        mPath.rCubicTo(-0.26f, 0.08f, -0.48f, 0.26f, -0.6f, 0.5f);
        mPath.rCubicTo(-0.119999886f, 0.23999977f, -0.15f, 0.52f, -0.06f, 0.78f);
        mPath.lineTo(3.95f, 19.0f);
        mPath.close();
        mPath.moveTo(3.95f, 19.0f);
        mPath.moveTo(6.0f, 6.0f);
        mPath.rLineTo(12.0f, 0f);
        mPath.rLineTo(0f, 3.97f);
        mPath.lineTo(12.0f, 8.0f);
        mPath.lineTo(6.0f, 9.97f);
        mPath.lineTo(6.0f, 6.0f);
        mPath.close();
        mPath.moveTo(6.0f, 6.0f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}