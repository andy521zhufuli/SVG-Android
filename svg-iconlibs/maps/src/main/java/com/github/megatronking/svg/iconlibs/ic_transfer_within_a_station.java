package com.github.megatronking.svg.iconlibs;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class ic_transfer_within_a_station extends SVGRenderer {

    public ic_transfer_within_a_station(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = dip2px(24.0f);
        mHeight = dip2px(24.0f);
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        final float scaleX = w / 24.0f;
        final float scaleY = h / 24.0f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(16.49f, 15.5f);
        mPath.rLineTo(0f, -1.75f);
        mPath.lineTo(14.0f, 16.25f);
        mPath.rLineTo(2.49f, 2.5f);
        mPath.lineTo(16.49f, 17.0f);
        mPath.lineTo(22.0f, 17.0f);
        mPath.rLineTo(0f, -1.5f);
        mPath.close();
        mPath.moveTo(16.49f, 15.5f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(19.51f, 19.75f);
        mPath.lineTo(14.0f, 19.75f);
        mPath.rLineTo(0f, 1.5f);
        mPath.rLineTo(5.51f, 0f);
        mPath.lineTo(19.51f, 23.0f);
        mPath.lineTo(22.0f, 20.5f);
        mPath.lineTo(19.51f, 18.0f);
        mPath.close();
        mPath.moveTo(19.51f, 19.75f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(9.5f, 5.5f);
        mPath.rCubicTo(1.1f, 0.0f, 2.0f, -0.9f, 2.0f, -2.0f);
        mPath.rCubicTo(0.0f, -1.0999999f, -0.9f, -2.0f, -2.0f, -2.0f);
        mPath.rCubicTo(-1.1000004f, 0.0f, -2.0f, 0.9f, -2.0f, 2.0f);
        mPath.rCubicTo(0.0f, 1.0999999f, 0.9f, 2.0f, 2.0f, 2.0f);
        mPath.close();
        mPath.moveTo(9.5f, 5.5f);
        mPath.moveTo(5.75f, 8.9f);
        mPath.lineTo(3.0f, 23.0f);
        mPath.rLineTo(2.1f, 0f);
        mPath.rLineTo(1.75f, -8.0f);
        mPath.lineTo(9.0f, 17.0f);
        mPath.rLineTo(0f, 6.0f);
        mPath.rLineTo(2.0f, 0f);
        mPath.rLineTo(0f, -7.55f);
        mPath.lineTo(8.95f, 13.4f);
        mPath.rLineTo(0.6f, -3.0f);
        mPath.cubicTo(10.85f, 12.0f, 12.8f, 13.0f, 15.0f, 13.0f);
        mPath.rLineTo(0f, -2.0f);
        mPath.rCubicTo(-1.85f, 0.0f, -3.45f, -1.0f, -4.35f, -2.45f);
        mPath.rLineTo(-0.95f, -1.6f);
        mPath.cubicTo(9.35f, 6.35f, 8.7f, 6.0f, 8.0f, 6.0f);
        mPath.rCubicTo(-0.25f, 0.0f, -0.5f, 0.05f, -0.75f, 0.15f);
        mPath.lineTo(2.0f, 8.3f);
        mPath.lineTo(2.0f, 13.0f);
        mPath.rLineTo(2.0f, 0f);
        mPath.lineTo(4.0f, 9.65f);
        mPath.rLineTo(1.75f, -0.75f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}