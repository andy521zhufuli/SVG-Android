package com.github.megatronking.svg.iconlibs;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class ic_strikethrough_s extends SVGRenderer {

    public ic_strikethrough_s(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = dip2px(24.0f);
        mHeight = dip2px(24.0f);
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        final float scaleX = w / 24.0f;
        final float scaleY = h / 24.0f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(7.24f, 8.75f);
        mPath.rCubicTo(-0.26f, -0.48f, -0.39f, -1.03f, -0.39f, -1.67f);
        mPath.rCubicTo(0.0f, -0.61f, 0.13f, -1.16f, 0.4f, -1.67f);
        mPath.rCubicTo(0.26f, -0.5f, 0.63f, -0.93f, 1.11f, -1.29f);
        mPath.rCubicTo(0.48f, -0.35f, 1.05f, -0.63f, 1.7f, -0.83f);
        mPath.rCubicTo(0.66f, -0.19f, 1.39f, -0.29f, 2.18f, -0.29f);
        mPath.rCubicTo(0.81f, 0.0f, 1.54f, 0.11f, 2.21f, 0.34f);
        mPath.rCubicTo(0.66f, 0.22f, 1.23f, 0.54f, 1.69f, 0.94f);
        mPath.rCubicTo(0.47f, 0.4f, 0.83f, 0.88f, 1.08f, 1.43f);
        mPath.rCubicTo(0.25f, 0.55f, 0.38f, 1.15f, 0.38f, 1.81f);
        mPath.rLineTo(-3.01f, 0f);
        mPath.rCubicTo(0.0f, -0.31f, -0.05f, -0.59f, -0.15f, -0.85f);
        mPath.rCubicTo(-0.09f, -0.27f, -0.24f, -0.49f, -0.44f, -0.68f);
        mPath.rCubicTo(-0.2f, -0.19f, -0.45f, -0.33f, -0.75f, -0.44f);
        mPath.rCubicTo(-0.3f, -0.1f, -0.66f, -0.16f, -1.06f, -0.16f);
        mPath.rCubicTo(-0.39f, 0.0f, -0.74f, 0.04f, -1.03f, 0.13f);
        mPath.rCubicTo(-0.29f, 0.09f, -0.53f, 0.21f, -0.72f, 0.36f);
        mPath.rCubicTo(-0.19f, 0.16f, -0.34f, 0.34f, -0.44f, 0.55f);
        mPath.rCubicTo(-0.1f, 0.21f, -0.15f, 0.43f, -0.15f, 0.66f);
        mPath.rCubicTo(0.0f, 0.48f, 0.25f, 0.88f, 0.74f, 1.21f);
        mPath.rCubicTo(0.38f, 0.25f, 0.77f, 0.48f, 1.41f, 0.7f);
        mPath.lineTo(7.39f, 9.0f);
        mPath.rCubicTo(-0.05f, -0.08f, -0.11f, -0.17f, -0.15f, -0.25f);
        mPath.close();
        mPath.moveTo(7.24f, 8.75f);
        mPath.moveTo(21.0f, 12.0f);
        mPath.rLineTo(0f, -2.0f);
        mPath.lineTo(3.0f, 10.0f);
        mPath.rLineTo(0f, 2.0f);
        mPath.rLineTo(9.62f, 0f);
        mPath.rCubicTo(0.18f, 0.07f, 0.4f, 0.14f, 0.55f, 0.2f);
        mPath.rCubicTo(0.37f, 0.17f, 0.66f, 0.34f, 0.87f, 0.51f);
        mPath.rCubicTo(0.21f, 0.17f, 0.35f, 0.36f, 0.43f, 0.57f);
        mPath.rCubicTo(0.07f, 0.2f, 0.11f, 0.43f, 0.11f, 0.69f);
        mPath.rCubicTo(0.0f, 0.23f, -0.05f, 0.45f, -0.14f, 0.66f);
        mPath.rCubicTo(-0.09f, 0.2f, -0.23f, 0.38f, -0.42f, 0.53f);
        mPath.rCubicTo(-0.19f, 0.15f, -0.42f, 0.26f, -0.71f, 0.35f);
        mPath.rCubicTo(-0.29f, 0.08f, -0.63f, 0.13f, -1.01f, 0.13f);
        mPath.rCubicTo(-0.43f, 0.0f, -0.83f, -0.04f, -1.18f, -0.13f);
        mPath.rCubicTo(-0.35000038f, -0.09000015f, -0.66f, -0.23f, -0.91f, -0.42f);
        mPath.rCubicTo(-0.25f, -0.19f, -0.45f, -0.44f, -0.59f, -0.75f);
        mPath.rCubicTo(-0.14f, -0.31f, -0.25f, -0.76f, -0.25f, -1.21f);
        mPath.lineTo(6.4f, 13.129999f);
        mPath.rCubicTo(0.0f, 0.55f, 0.08f, 1.13f, 0.24f, 1.58f);
        mPath.rCubicTo(0.16f, 0.45f, 0.37f, 0.85f, 0.65f, 1.21f);
        mPath.rCubicTo(0.28f, 0.35f, 0.6f, 0.66f, 0.98f, 0.92f);
        mPath.rCubicTo(0.37f, 0.26f, 0.78f, 0.48f, 1.22f, 0.65f);
        mPath.rCubicTo(0.44f, 0.17f, 0.9f, 0.3f, 1.38f, 0.39f);
        mPath.rCubicTo(0.48f, 0.08f, 0.96f, 0.13f, 1.44f, 0.13f);
        mPath.rCubicTo(0.8f, 0.0f, 1.53f, -0.09f, 2.18f, -0.28f);
        mPath.rCubicTo(0.6500006f, -0.19000053f, 1.21f, -0.45f, 1.67f, -0.79f);
        mPath.rCubicTo(0.46f, -0.34f, 0.82f, -0.77f, 1.07f, -1.27f);
        mPath.rCubicTo(0.25f, -0.5f, 0.38f, -1.07f, 0.38f, -1.71f);
        mPath.rCubicTo(0.0f, -0.6f, -0.1f, -1.14f, -0.31f, -1.61f);
        mPath.rCubicTo(-0.05f, -0.11f, -0.11f, -0.23f, -0.17f, -0.33f);
        mPath.lineTo(21.0f, 12.019995f);
        mPath.close();
        mPath.moveTo(21.0f, 12.0f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-16711423, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}