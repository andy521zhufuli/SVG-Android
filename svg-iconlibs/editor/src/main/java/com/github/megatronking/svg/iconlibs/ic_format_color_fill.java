package com.github.megatronking.svg.iconlibs;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class ic_format_color_fill extends SVGRenderer {

    public ic_format_color_fill(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = dip2px(24.0f);
        mHeight = dip2px(24.0f);
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        final float scaleX = w / 24.0f;
        final float scaleY = h / 24.0f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(16.56f, 8.94f);
        mPath.lineTo(7.62f, 0.0f);
        mPath.lineTo(6.21f, 1.41f);
        mPath.rLineTo(2.38f, 2.38f);
        mPath.rLineTo(-5.15f, 5.15f);
        mPath.rCubicTo(-0.59f, 0.59f, -0.59f, 1.54f, 0.0f, 2.12f);
        mPath.rLineTo(5.5f, 5.5f);
        mPath.rCubicTo(0.29f, 0.29f, 0.68f, 0.44f, 1.06f, 0.44f);
        mPath.rCubicTo(0.37999916f, 0.0f, 0.77f, -0.15f, 1.06f, -0.44f);
        mPath.rLineTo(5.5f, -5.5f);
        mPath.rCubicTo(0.59f, -0.58f, 0.59f, -1.53f, 0.0f, -2.12f);
        mPath.close();
        mPath.moveTo(16.56f, 8.94f);
        mPath.moveTo(5.21f, 10.0f);
        mPath.lineTo(10.0f, 5.21f);
        mPath.lineTo(14.79f, 10.0f);
        mPath.lineTo(5.21f, 10.0f);
        mPath.close();
        mPath.moveTo(5.21f, 10.0f);
        mPath.moveTo(19.0f, 11.5f);
        mPath.rCubicTo(0.0f, 0.0f, -2.0f, 2.17f, -2.0f, 3.5f);
        mPath.rCubicTo(0.0f, 1.1f, 0.9f, 2.0f, 2.0f, 2.0f);
        mPath.rCubicTo(1.1000004f, 0.0f, 2.0f, -0.9f, 2.0f, -2.0f);
        mPath.rCubicTo(0.0f, -1.33f, -2.0f, -3.5f, -2.0f, -3.5f);
        mPath.close();
        mPath.moveTo(19.0f, 11.5f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(0.0f, 20.0f);
        mPath.rLineTo(24.0f, 0f);
        mPath.rLineTo(0f, 4.0f);
        mPath.lineTo(0.0f, 24.0f);
        mPath.close();
        mPath.moveTo(0.0f, 20.0f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-16777216, 0.36f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}