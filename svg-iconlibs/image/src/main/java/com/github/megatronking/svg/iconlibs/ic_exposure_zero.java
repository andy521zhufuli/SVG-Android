package com.github.megatronking.svg.iconlibs;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class ic_exposure_zero extends SVGRenderer {

    public ic_exposure_zero(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = dip2px(24.0f);
        mHeight = dip2px(24.0f);
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        final float scaleX = w / 24.0f;
        final float scaleY = h / 24.0f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(16.14f, 12.5f);
        mPath.rCubicTo(0.0f, 1.0f, -0.1f, 1.85f, -0.3f, 2.55f);
        mPath.rCubicTo(-0.2f, 0.7f, -0.48f, 1.27f, -0.83f, 1.7f);
        mPath.rCubicTo(-0.36f, 0.44f, -0.79f, 0.75f, -1.3f, 0.95f);
        mPath.rCubicTo(-0.51f, 0.2f, -1.07f, 0.3f, -1.7f, 0.3f);
        mPath.rCubicTo(-0.62f, 0.0f, -1.18f, -0.1f, -1.69f, -0.3f);
        mPath.rCubicTo(-0.51f, -0.2f, -0.95f, -0.51f, -1.31f, -0.95f);
        mPath.rCubicTo(-0.36f, -0.44f, -0.65f, -1.01f, -0.85f, -1.7f);
        mPath.rCubicTo(-0.2f, -0.7f, -0.3f, -1.55f, -0.3f, -2.55f);
        mPath.rLineTo(0f, -2.04f);
        mPath.rCubicTo(0.0f, -1.0f, 0.1f, -1.85f, 0.3f, -2.55f);
        mPath.rCubicTo(0.2f, -0.7f, 0.48f, -1.26f, 0.84f, -1.69f);
        mPath.rCubicTo(0.36f, -0.43f, 0.8f, -0.74f, 1.31f, -0.93f);
        mPath.cubicTo(10.81f, 5.1f, 11.38f, 5.0f, 12.0f, 5.0f);
        mPath.rCubicTo(0.63f, 0.0f, 1.19f, 0.1f, 1.7f, 0.29f);
        mPath.rCubicTo(0.51f, 0.19f, 0.95f, 0.5f, 1.31f, 0.93f);
        mPath.rCubicTo(0.36f, 0.43f, 0.64f, 0.99f, 0.84f, 1.69f);
        mPath.rCubicTo(0.2f, 0.7f, 0.3f, 1.54f, 0.3f, 2.55f);
        mPath.rLineTo(0f, 2.04f);
        mPath.close();
        mPath.moveTo(16.14f, 12.5f);
        mPath.rMoveTo(-2.11f, -2.36f);
        mPath.rCubicTo(0.0f, -0.64f, -0.05f, -1.18f, -0.13f, -1.62f);
        mPath.rCubicTo(-0.09f, -0.44f, -0.22f, -0.79f, -0.4f, -1.06f);
        mPath.rCubicTo(-0.17f, -0.27f, -0.39f, -0.46f, -0.64f, -0.58f);
        mPath.rCubicTo(-0.25f, -0.13f, -0.54f, -0.19f, -0.86f, -0.19f);
        mPath.rCubicTo(-0.32f, 0.0f, -0.61f, 0.06f, -0.86f, 0.18f);
        mPath.rCubicTo(-0.25f, 0.119999886f, -0.47f, 0.31f, -0.64f, 0.58f);
        mPath.rCubicTo(-0.17f, 0.27f, -0.31f, 0.62f, -0.4f, 1.06f);
        mPath.rCubicTo(-0.0899992f, 0.43999958f, -0.13f, 0.98f, -0.13f, 1.62f);
        mPath.rLineTo(0f, 2.67f);
        mPath.rCubicTo(0.0f, 0.64f, 0.05f, 1.18f, 0.14f, 1.62f);
        mPath.rCubicTo(0.09f, 0.45f, 0.23f, 0.81f, 0.4f, 1.09f);
        mPath.rCubicTo(0.17000008f, 0.27999973f, 0.39f, 0.48f, 0.64f, 0.61f);
        mPath.rCubicTo(0.25f, 0.13000107f, 0.54f, 0.19f, 0.87f, 0.19f);
        mPath.rCubicTo(0.33f, 0.0f, 0.62f, -0.06f, 0.87f, -0.19f);
        mPath.rCubicTo(0.25f, -0.13000107f, 0.46f, -0.33f, 0.63f, -0.61f);
        mPath.rCubicTo(0.17f, -0.28f, 0.3f, -0.64f, 0.39f, -1.09f);
        mPath.rCubicTo(0.09f, -0.45f, 0.13f, -0.99f, 0.13f, -1.62f);
        mPath.rLineTo(0f, -2.66f);
        mPath.close();
        mPath.moveTo(14.03f, 10.14f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}