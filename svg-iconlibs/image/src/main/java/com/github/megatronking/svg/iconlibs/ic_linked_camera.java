package com.github.megatronking.svg.iconlibs;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class ic_linked_camera extends SVGRenderer {

    public ic_linked_camera(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = dip2px(24.0f);
        mHeight = dip2px(24.0f);
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        final float scaleX = w / 24.0f;
        final float scaleY = h / 24.0f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(12.0f, 14.0f);
        mPath.rMoveTo(-3.2f, 0.0f);
        mPath.cubicTo(8.797845f, 13.32294f, 9.010624f, 12.662354f, 9.407545f, 12.113839f);
        mPath.cubicTo(9.804466f, 11.565325f, 10.365412f, 11.156681f, 11.009204f, 10.947047f);
        mPath.cubicTo(11.652996f, 10.737413f, 12.347005f, 10.737413f, 12.990797f, 10.947047f);
        mPath.cubicTo(13.634589f, 11.156681f, 14.195535f, 11.565325f, 14.592456f, 12.113839f);
        mPath.cubicTo(14.989377f, 12.662354f, 15.202156f, 13.32294f, 15.200001f, 14.0f);
        mPath.cubicTo(15.200262f, 14.6758375f, 14.986411f, 15.334693f, 14.589291f, 15.881549f);
        mPath.cubicTo(14.19217f, 16.428404f, 13.631834f, 16.835646f, 12.98909f, 17.04454f);
        mPath.cubicTo(12.346347f, 17.253435f, 11.653655f, 17.253435f, 11.010912f, 17.04454f);
        mPath.cubicTo(10.368168f, 16.835646f, 9.807832f, 16.428404f, 9.410711f, 15.881549f);
        mPath.cubicTo(9.013591f, 15.334693f, 8.79974f, 14.6758375f, 8.800001f, 14.0f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(16.0f, 3.33f);
        mPath.rCubicTo(2.58f, 0.0f, 4.67f, 2.09f, 4.67f, 4.67f);
        mPath.lineTo(22.0f, 8.0f);
        mPath.rCubicTo(0.0f, -3.31f, -2.69f, -6.0f, -6.0f, -6.0f);
        mPath.rLineTo(0f, 1.33f);
        mPath.moveTo(16.0f, 6.0f);
        mPath.rCubicTo(1.11f, 0.0f, 2.0f, 0.89f, 2.0f, 2.0f);
        mPath.rLineTo(1.33f, 0f);
        mPath.rCubicTo(0.0f, -1.84f, -1.49f, -3.33f, -3.33f, -3.33f);
        mPath.lineTo(16.0f, 6.0f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(17.0f, 9.0f);
        mPath.rCubicTo(0.0f, -1.11f, -0.89f, -2.0f, -2.0f, -2.0f);
        mPath.lineTo(15.0f, 4.0f);
        mPath.lineTo(9.0f, 4.0f);
        mPath.lineTo(7.17f, 6.0f);
        mPath.lineTo(4.0f, 6.0f);
        mPath.rCubicTo(-1.1f, 0.0f, -2.0f, 0.9f, -2.0f, 2.0f);
        mPath.rLineTo(0f, 12.0f);
        mPath.rCubicTo(0.0f, 1.1f, 0.9f, 2.0f, 2.0f, 2.0f);
        mPath.rLineTo(16.0f, 0f);
        mPath.rCubicTo(1.1f, 0.0f, 2.0f, -0.9f, 2.0f, -2.0f);
        mPath.lineTo(22.0f, 9.0f);
        mPath.rLineTo(-5.0f, 0f);
        mPath.close();
        mPath.moveTo(17.0f, 9.0f);
        mPath.rMoveTo(-5.0f, 10.0f);
        mPath.rCubicTo(-2.76f, 0.0f, -5.0f, -2.24f, -5.0f, -5.0f);
        mPath.rCubicTo(0.0f, -2.7600002f, 2.24f, -5.0f, 5.0f, -5.0f);
        mPath.rCubicTo(2.7600002f, 0.0f, 5.0f, 2.24f, 5.0f, 5.0f);
        mPath.rCubicTo(0.0f, 2.7600002f, -2.24f, 5.0f, -5.0f, 5.0f);
        mPath.close();
        mPath.moveTo(12.0f, 19.0f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}