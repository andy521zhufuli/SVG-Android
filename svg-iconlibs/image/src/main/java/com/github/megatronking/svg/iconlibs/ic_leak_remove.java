package com.github.megatronking.svg.iconlibs;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class ic_leak_remove extends SVGRenderer {

    public ic_leak_remove(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = dip2px(24.0f);
        mHeight = dip2px(24.0f);
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        final float scaleX = w / 24.0f;
        final float scaleY = h / 24.0f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(10.0f, 3.0f);
        mPath.lineTo(8.0f, 3.0f);
        mPath.rCubicTo(0.0f, 0.37f, -0.04f, 0.72f, -0.12f, 1.06f);
        mPath.rLineTo(1.59f, 1.59f);
        mPath.cubicTo(9.81f, 4.84f, 10.0f, 3.94f, 10.0f, 3.0f);
        mPath.close();
        mPath.moveTo(10.0f, 3.0f);
        mPath.moveTo(3.0f, 4.27f);
        mPath.rLineTo(2.84f, 2.84f);
        mPath.cubicTo(5.03f, 7.67f, 4.06f, 8.0f, 3.0f, 8.0f);
        mPath.rLineTo(0f, 2.0f);
        mPath.rCubicTo(1.61f, 0.0f, 3.09f, -0.55f, 4.27f, -1.46f);
        mPath.lineTo(8.7f, 9.97f);
        mPath.cubicTo(7.14f, 11.24f, 5.16f, 12.0f, 3.0f, 12.0f);
        mPath.rLineTo(0f, 2.0f);
        mPath.rCubicTo(2.71f, 0.0f, 5.19f, -0.99f, 7.11f, -2.62f);
        mPath.rLineTo(2.5f, 2.5f);
        mPath.cubicTo(10.99f, 15.81f, 10.0f, 18.29f, 10.0f, 21.0f);
        mPath.rLineTo(2.0f, 0f);
        mPath.rCubicTo(0.0f, -2.16f, 0.76f, -4.14f, 2.03f, -5.69f);
        mPath.rLineTo(1.43f, 1.43f);
        mPath.cubicTo(14.55f, 17.91f, 14.0f, 19.39f, 14.0f, 21.0f);
        mPath.rLineTo(2.0f, 0f);
        mPath.rCubicTo(0.0f, -1.06f, 0.33f, -2.03f, 0.89f, -2.84f);
        mPath.lineTo(19.73f, 21.0f);
        mPath.lineTo(21.0f, 19.73f);
        mPath.lineTo(4.27f, 3.0f);
        mPath.lineTo(3.0f, 4.27f);
        mPath.close();
        mPath.moveTo(3.0f, 4.27f);
        mPath.moveTo(14.0f, 3.0f);
        mPath.rLineTo(-2.0f, 0f);
        mPath.rCubicTo(0.0f, 1.5f, -0.37f, 2.91f, -1.02f, 4.16f);
        mPath.rLineTo(1.46f, 1.46f);
        mPath.cubicTo(13.42f, 6.98f, 14.0f, 5.06f, 14.0f, 3.0f);
        mPath.close();
        mPath.moveTo(14.0f, 3.0f);
        mPath.rMoveTo(5.94f, 13.12f);
        mPath.rCubicTo(0.34f, -0.08f, 0.69f, -0.12f, 1.06f, -0.12f);
        mPath.rLineTo(0f, -2.0f);
        mPath.rCubicTo(-0.94f, 0.0f, -1.84f, 0.19f, -2.66f, 0.52f);
        mPath.rLineTo(1.6f, 1.6f);
        mPath.close();
        mPath.moveTo(19.94f, 16.119999f);
        mPath.rMoveTo(-4.56f, -4.56f);
        mPath.rLineTo(1.46f, 1.46f);
        mPath.cubicTo(18.09f, 12.37f, 19.5f, 12.0f, 21.0f, 12.0f);
        mPath.rLineTo(0f, -2.0f);
        mPath.rCubicTo(-2.06f, 0.0f, -3.98f, 0.58f, -5.62f, 1.56f);
        mPath.close();
        mPath.moveTo(15.380001f, 11.559999f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}