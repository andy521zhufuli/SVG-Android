package com.github.megatronking.svg.iconlibs;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class ic_healing extends SVGRenderer {

    public ic_healing(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = dip2px(24.0f);
        mHeight = dip2px(24.0f);
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        final float scaleX = w / 24.0f;
        final float scaleY = h / 24.0f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(17.73f, 12.02f);
        mPath.rLineTo(3.98f, -3.98f);
        mPath.rCubicTo(0.39f, -0.39f, 0.39f, -1.02f, 0.0f, -1.41f);
        mPath.rLineTo(-4.34f, -4.34f);
        mPath.rCubicTo(-0.39f, -0.39f, -1.02f, -0.39f, -1.41f, 0.0f);
        mPath.rLineTo(-3.98f, 3.98f);
        mPath.lineTo(8.0f, 2.29f);
        mPath.cubicTo(7.8f, 2.1f, 7.55f, 2.0f, 7.29f, 2.0f);
        mPath.rCubicTo(-0.25f, 0.0f, -0.51f, 0.1f, -0.7f, 0.29f);
        mPath.lineTo(2.25f, 6.63f);
        mPath.rCubicTo(-0.39f, 0.39f, -0.39f, 1.02f, 0.0f, 1.41f);
        mPath.rLineTo(3.98f, 3.98f);
        mPath.lineTo(2.25f, 16.0f);
        mPath.rCubicTo(-0.39f, 0.39f, -0.39f, 1.02f, 0.0f, 1.41f);
        mPath.rLineTo(4.34f, 4.34f);
        mPath.rCubicTo(0.39f, 0.39f, 1.02f, 0.39f, 1.41f, 0.0f);
        mPath.rLineTo(3.98f, -3.98f);
        mPath.rLineTo(3.98f, 3.98f);
        mPath.rCubicTo(0.2f, 0.2f, 0.45f, 0.29f, 0.71f, 0.29f);
        mPath.rCubicTo(0.26f, 0.0f, 0.51f, -0.1f, 0.71f, -0.29f);
        mPath.rLineTo(4.34f, -4.34f);
        mPath.rCubicTo(0.39f, -0.39f, 0.39f, -1.02f, 0.0f, -1.41f);
        mPath.rLineTo(-3.99f, -3.98f);
        mPath.close();
        mPath.moveTo(17.73f, 12.02f);
        mPath.moveTo(12.0f, 9.0f);
        mPath.rCubicTo(0.55f, 0.0f, 1.0f, 0.45f, 1.0f, 1.0f);
        mPath.rCubicTo(0.0f, 0.5500002f, -0.45f, 1.0f, -1.0f, 1.0f);
        mPath.rCubicTo(-0.5500002f, 0.0f, -1.0f, -0.45f, -1.0f, -1.0f);
        mPath.rCubicTo(0.0f, -0.5500002f, 0.45f, -1.0f, 1.0f, -1.0f);
        mPath.close();
        mPath.moveTo(12.0f, 9.0f);
        mPath.rMoveTo(-4.71f, 1.96f);
        mPath.lineTo(3.66f, 7.34f);
        mPath.rLineTo(3.63f, -3.63f);
        mPath.rLineTo(3.62f, 3.62f);
        mPath.rLineTo(-3.62f, 3.63f);
        mPath.close();
        mPath.moveTo(7.29f, 10.96f);
        mPath.moveTo(10.0f, 13.0f);
        mPath.rCubicTo(-0.55f, 0.0f, -1.0f, -0.45f, -1.0f, -1.0f);
        mPath.rCubicTo(0.0f, -0.5500002f, 0.45f, -1.0f, 1.0f, -1.0f);
        mPath.rCubicTo(0.5500002f, 0.0f, 1.0f, 0.45f, 1.0f, 1.0f);
        mPath.rCubicTo(0.0f, 0.5500002f, -0.45f, 1.0f, -1.0f, 1.0f);
        mPath.close();
        mPath.moveTo(10.0f, 13.0f);
        mPath.rMoveTo(2.0f, 2.0f);
        mPath.rCubicTo(-0.55f, 0.0f, -1.0f, -0.45f, -1.0f, -1.0f);
        mPath.rCubicTo(0.0f, -0.5500002f, 0.45f, -1.0f, 1.0f, -1.0f);
        mPath.rCubicTo(0.5500002f, 0.0f, 1.0f, 0.45f, 1.0f, 1.0f);
        mPath.rCubicTo(0.0f, 0.5500002f, -0.45f, 1.0f, -1.0f, 1.0f);
        mPath.close();
        mPath.moveTo(12.0f, 15.0f);
        mPath.rMoveTo(2.0f, -4.0f);
        mPath.rCubicTo(0.55f, 0.0f, 1.0f, 0.45f, 1.0f, 1.0f);
        mPath.rCubicTo(0.0f, 0.5500002f, -0.45f, 1.0f, -1.0f, 1.0f);
        mPath.rCubicTo(-0.5500002f, 0.0f, -1.0f, -0.45f, -1.0f, -1.0f);
        mPath.rCubicTo(0.0f, -0.5500002f, 0.45f, -1.0f, 1.0f, -1.0f);
        mPath.close();
        mPath.moveTo(14.0f, 11.0f);
        mPath.rMoveTo(2.66f, 9.34f);
        mPath.rLineTo(-3.63f, -3.62f);
        mPath.rLineTo(3.63f, -3.63f);
        mPath.rLineTo(3.62f, 3.62f);
        mPath.rLineTo(-3.62f, 3.63f);
        mPath.close();
        mPath.moveTo(16.66f, 20.34f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}