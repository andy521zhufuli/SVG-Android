package com.github.megatronking.svg.iconlibs;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class ic_language extends SVGRenderer {

    public ic_language(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = dip2px(24.0f);
        mHeight = dip2px(24.0f);
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        final float scaleX = w / 24.0f;
        final float scaleY = h / 24.0f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(11.99f, 2.0f);
        mPath.cubicTo(6.47f, 2.0f, 2.0f, 6.48f, 2.0f, 12.0f);
        mPath.rCubicTo(0.0f, 5.52f, 4.47f, 10.0f, 9.99f, 10.0f);
        mPath.cubicTo(17.52f, 22.0f, 22.0f, 17.52f, 22.0f, 12.0f);
        mPath.cubicTo(22.0f, 6.4799995f, 17.52f, 2.0f, 11.99f, 2.0f);
        mPath.close();
        mPath.moveTo(11.99f, 2.0f);
        mPath.rMoveTo(6.93f, 6.0f);
        mPath.rLineTo(-2.95f, 0f);
        mPath.rCubicTo(-0.32f, -1.25f, -0.78f, -2.45f, -1.38f, -3.56f);
        mPath.rCubicTo(1.84f, 0.63f, 3.37f, 1.91f, 4.33f, 3.56f);
        mPath.close();
        mPath.moveTo(18.92f, 8.0f);
        mPath.moveTo(12.0f, 4.04f);
        mPath.rCubicTo(0.83f, 1.2f, 1.48f, 2.53f, 1.91f, 3.96f);
        mPath.rLineTo(-3.82f, 0f);
        mPath.rCubicTo(0.43f, -1.43f, 1.08f, -2.76f, 1.91f, -3.96f);
        mPath.close();
        mPath.moveTo(12.0f, 4.04f);
        mPath.moveTo(4.26f, 14.0f);
        mPath.cubicTo(4.1f, 13.36f, 4.0f, 12.69f, 4.0f, 12.0f);
        mPath.rCubicTo(0.0f, -0.6899996f, 0.1f, -1.36f, 0.26f, -2.0f);
        mPath.rLineTo(3.38f, 0f);
        mPath.rCubicTo(-0.08f, 0.66f, -0.14f, 1.32f, -0.14f, 2.0f);
        mPath.rCubicTo(0.0f, 0.68f, 0.06f, 1.34f, 0.14f, 2.0f);
        mPath.lineTo(4.26f, 14.0f);
        mPath.close();
        mPath.moveTo(4.26f, 14.0f);
        mPath.rMoveTo(0.82f, 2.0f);
        mPath.rLineTo(2.95f, 0f);
        mPath.rCubicTo(0.32f, 1.25f, 0.78f, 2.45f, 1.38f, 3.56f);
        mPath.rCubicTo(-1.84f, -0.63f, -3.37f, -1.9f, -4.33f, -3.56f);
        mPath.close();
        mPath.moveTo(5.0800004f, 16.0f);
        mPath.rMoveTo(2.95f, -8.0f);
        mPath.lineTo(5.08f, 8.0f);
        mPath.rCubicTo(0.96f, -1.66f, 2.49f, -2.93f, 4.33f, -3.56f);
        mPath.cubicTo(8.81f, 5.55f, 8.35f, 6.75f, 8.03f, 8.0f);
        mPath.close();
        mPath.moveTo(8.030001f, 8.0f);
        mPath.moveTo(12.0f, 19.96f);
        mPath.rCubicTo(-0.83f, -1.2f, -1.48f, -2.53f, -1.91f, -3.96f);
        mPath.rLineTo(3.82f, 0f);
        mPath.rCubicTo(-0.43f, 1.43f, -1.08f, 2.76f, -1.91f, 3.96f);
        mPath.close();
        mPath.moveTo(12.0f, 19.96f);
        mPath.moveTo(14.34f, 14.0f);
        mPath.lineTo(9.66f, 14.0f);
        mPath.rCubicTo(-0.09f, -0.66f, -0.16f, -1.32f, -0.16f, -2.0f);
        mPath.rCubicTo(0.0f, -0.68f, 0.07f, -1.35f, 0.16f, -2.0f);
        mPath.rLineTo(4.68f, 0f);
        mPath.rCubicTo(0.09f, 0.65f, 0.16f, 1.32f, 0.16f, 2.0f);
        mPath.rCubicTo(0.0f, 0.68f, -0.07f, 1.34f, -0.16f, 2.0f);
        mPath.close();
        mPath.moveTo(14.34f, 14.0f);
        mPath.rMoveTo(0.25f, 5.56f);
        mPath.rCubicTo(0.6f, -1.11f, 1.06f, -2.31f, 1.38f, -3.56f);
        mPath.rLineTo(2.95f, 0f);
        mPath.rCubicTo(-0.96f, 1.65f, -2.49f, 2.93f, -4.33f, 3.56f);
        mPath.close();
        mPath.moveTo(14.59f, 19.56f);
        mPath.moveTo(16.36f, 14.0f);
        mPath.rCubicTo(0.08f, -0.66f, 0.14f, -1.32f, 0.14f, -2.0f);
        mPath.rCubicTo(0.0f, -0.68f, -0.06f, -1.34f, -0.14f, -2.0f);
        mPath.rLineTo(3.38f, 0f);
        mPath.rCubicTo(0.16f, 0.64f, 0.26f, 1.31f, 0.26f, 2.0f);
        mPath.rCubicTo(0.0f, 0.69000053f, -0.1f, 1.36f, -0.26f, 2.0f);
        mPath.rLineTo(-3.38f, 0f);
        mPath.close();
        mPath.moveTo(16.36f, 14.0f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}