package com.github.megatronking.svg.iconlibs;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class ic_rowing extends SVGRenderer {

    public ic_rowing(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = dip2px(24.0f);
        mHeight = dip2px(24.0f);
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        final float scaleX = w / 24.0f;
        final float scaleY = h / 24.0f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(8.5f, 14.5f);
        mPath.lineTo(4.0f, 19.0f);
        mPath.rLineTo(1.5f, 1.5f);
        mPath.lineTo(9.0f, 17.0f);
        mPath.rLineTo(2.0f, 0f);
        mPath.rLineTo(-2.5f, -2.5f);
        mPath.close();
        mPath.moveTo(8.5f, 14.5f);
        mPath.moveTo(15.0f, 1.0f);
        mPath.rCubicTo(-1.1f, 0.0f, -2.0f, 0.9f, -2.0f, 2.0f);
        mPath.rCubicTo(0.0f, 1.1f, 0.9f, 2.0f, 2.0f, 2.0f);
        mPath.rCubicTo(1.1000004f, 0.0f, 2.0f, -0.9f, 2.0f, -2.0f);
        mPath.rCubicTo(0.0f, -1.0999999f, -0.9f, -2.0f, -2.0f, -2.0f);
        mPath.close();
        mPath.moveTo(15.0f, 1.0f);
        mPath.rMoveTo(6.0f, 20.01f);
        mPath.lineTo(18.0f, 24.0f);
        mPath.rLineTo(-2.99f, -3.01f);
        mPath.lineTo(15.01f, 19.5f);
        mPath.rLineTo(-7.1f, -7.09f);
        mPath.rCubicTo(-0.31f, 0.05f, -0.61f, 0.07f, -0.91f, 0.07f);
        mPath.rLineTo(0f, -2.16f);
        mPath.rCubicTo(1.66f, 0.03f, 3.61f, -0.87f, 4.67f, -2.04f);
        mPath.rLineTo(1.4f, -1.55f);
        mPath.rCubicTo(0.19f, -0.21f, 0.43f, -0.38f, 0.69f, -0.5f);
        mPath.rCubicTo(0.29f, -0.14f, 0.62f, -0.23f, 0.96f, -0.23f);
        mPath.rLineTo(0.03f, 0f);
        mPath.cubicTo(15.99f, 6.01f, 17.0f, 7.02f, 17.0f, 8.26f);
        mPath.rLineTo(0f, 5.75f);
        mPath.rCubicTo(0.0f, 0.84f, -0.35f, 1.61f, -0.92f, 2.16f);
        mPath.rLineTo(-3.58f, -3.58f);
        mPath.rLineTo(0f, -2.27f);
        mPath.rCubicTo(-0.63f, 0.52f, -1.43f, 1.02f, -2.29f, 1.39f);
        mPath.lineTo(16.5f, 18.0f);
        mPath.lineTo(18.0f, 18.0f);
        mPath.rLineTo(3.0f, 3.01f);
        mPath.close();
        mPath.moveTo(21.0f, 21.01f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}