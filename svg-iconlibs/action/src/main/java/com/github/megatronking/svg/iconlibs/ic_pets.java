package com.github.megatronking.svg.iconlibs;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class ic_pets extends SVGRenderer {

    public ic_pets(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = dip2px(24.0f);
        mHeight = dip2px(24.0f);
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        final float scaleX = w / 24.0f;
        final float scaleY = h / 24.0f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(4.5f, 9.5f);
        mPath.rMoveTo(-2.5f, 0.0f);
        mPath.cubicTo(2.0f, 8.972134f, 2.1671855f, 8.457589f, 2.4774575f, 8.030537f);
        mPath.cubicTo(2.7877295f, 7.603484f, 3.225427f, 7.285478f, 3.7274575f, 7.122359f);
        mPath.cubicTo(4.229488f, 6.959239f, 4.770512f, 6.959239f, 5.2725425f, 7.122359f);
        mPath.cubicTo(5.774573f, 7.285478f, 6.2122707f, 7.603484f, 6.5225425f, 8.030537f);
        mPath.cubicTo(6.832814f, 8.457589f, 7.0f, 8.972134f, 7.0f, 9.5f);
        mPath.cubicTo(7.0f, 10.027866f, 6.832814f, 10.542411f, 6.5225425f, 10.969463f);
        mPath.cubicTo(6.2122707f, 11.396516f, 5.774573f, 11.714521f, 5.2725425f, 11.877642f);
        mPath.cubicTo(4.770512f, 12.040761f, 4.229488f, 12.040761f, 3.7274575f, 11.877642f);
        mPath.cubicTo(3.225427f, 11.714521f, 2.7877295f, 11.396516f, 2.4774575f, 10.969463f);
        mPath.cubicTo(2.1671855f, 10.542411f, 2.0f, 10.027866f, 2.0f, 9.5f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(9.0f, 5.5f);
        mPath.rMoveTo(-2.5f, 0.0f);
        mPath.cubicTo(6.5f, 4.9721336f, 6.667186f, 4.4575896f, 6.9774575f, 4.0305367f);
        mPath.cubicTo(7.2877293f, 3.6034842f, 7.725427f, 3.2854784f, 8.227457f, 3.1223586f);
        mPath.cubicTo(8.729488f, 2.959239f, 9.270512f, 2.959239f, 9.772543f, 3.1223586f);
        mPath.cubicTo(10.274573f, 3.2854784f, 10.712271f, 3.6034842f, 11.022543f, 4.0305367f);
        mPath.cubicTo(11.332814f, 4.4575896f, 11.5f, 4.9721336f, 11.5f, 5.5f);
        mPath.cubicTo(11.5f, 6.0278664f, 11.332814f, 6.5424104f, 11.022543f, 6.9694633f);
        mPath.cubicTo(10.712271f, 7.396516f, 10.274573f, 7.714522f, 9.772543f, 7.877641f);
        mPath.cubicTo(9.270512f, 8.040761f, 8.729488f, 8.040761f, 8.227457f, 7.877641f);
        mPath.cubicTo(7.725427f, 7.714522f, 7.2877293f, 7.396516f, 6.9774575f, 6.9694633f);
        mPath.cubicTo(6.667186f, 6.5424104f, 6.5f, 6.0278664f, 6.5f, 5.5f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(15.0f, 5.5f);
        mPath.rMoveTo(-2.5f, 0.0f);
        mPath.cubicTo(12.5f, 4.837213f, 12.763572f, 4.2008944f, 13.232233f, 3.732233f);
        mPath.cubicTo(13.700894f, 3.263572f, 14.3372135f, 3.0f, 15.0f, 3.0f);
        mPath.cubicTo(15.6627865f, 3.0f, 16.299107f, 3.263572f, 16.767767f, 3.732233f);
        mPath.cubicTo(17.236427f, 4.2008944f, 17.5f, 4.837213f, 17.5f, 5.5f);
        mPath.cubicTo(17.5f, 6.162787f, 17.236427f, 6.7991056f, 16.767767f, 7.267767f);
        mPath.cubicTo(16.299107f, 7.7364283f, 15.6627865f, 8.0f, 15.0f, 8.0f);
        mPath.cubicTo(14.3372135f, 8.0f, 13.700894f, 7.7364283f, 13.232233f, 7.267767f);
        mPath.cubicTo(12.763572f, 6.7991056f, 12.5f, 6.162787f, 12.5f, 5.5f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(19.5f, 9.5f);
        mPath.rMoveTo(-2.5f, 0.0f);
        mPath.cubicTo(16.998335f, 8.971059f, 17.164577f, 8.454992f, 17.474674f, 8.026481f);
        mPath.cubicTo(17.784771f, 7.597969f, 18.223003f, 7.2787304f, 18.725956f, 7.1149607f);
        mPath.cubicTo(19.228909f, 6.951191f, 19.771091f, 6.951191f, 20.274044f, 7.1149607f);
        mPath.cubicTo(20.776997f, 7.2787304f, 21.215229f, 7.597969f, 21.525326f, 8.026481f);
        mPath.cubicTo(21.835423f, 8.454992f, 22.001665f, 8.971059f, 22.0f, 9.5f);
        mPath.cubicTo(22.001665f, 10.028941f, 21.835423f, 10.545008f, 21.525326f, 10.973519f);
        mPath.cubicTo(21.215229f, 11.402031f, 20.776997f, 11.72127f, 20.274044f, 11.885039f);
        mPath.cubicTo(19.771091f, 12.048809f, 19.228909f, 12.048809f, 18.725956f, 11.885039f);
        mPath.cubicTo(18.223003f, 11.72127f, 17.784771f, 11.402031f, 17.474674f, 10.973519f);
        mPath.cubicTo(17.164577f, 10.545008f, 16.998335f, 10.028941f, 17.0f, 9.5f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(17.34f, 14.86f);
        mPath.rCubicTo(-0.87f, -1.02f, -1.6f, -1.89f, -2.48f, -2.91f);
        mPath.rCubicTo(-0.46f, -0.54f, -1.05f, -1.08f, -1.75f, -1.32f);
        mPath.rCubicTo(-0.11f, -0.04f, -0.22f, -0.07f, -0.33f, -0.09f);
        mPath.rCubicTo(-0.25f, -0.04f, -0.52f, -0.04f, -0.78f, -0.04f);
        mPath.rCubicTo(-0.25999928f, 0.0f, -0.53f, 0.0f, -0.79f, 0.05f);
        mPath.rCubicTo(-0.11f, 0.02f, -0.22f, 0.05f, -0.33f, 0.09f);
        mPath.rCubicTo(-0.7f, 0.24f, -1.28f, 0.78f, -1.75f, 1.32f);
        mPath.rCubicTo(-0.87f, 1.02f, -1.6f, 1.89f, -2.48f, 2.91f);
        mPath.rCubicTo(-1.31f, 1.31f, -2.92f, 2.76f, -2.62f, 4.79f);
        mPath.rCubicTo(0.29f, 1.02f, 1.02f, 2.03f, 2.33f, 2.32f);
        mPath.rCubicTo(0.73f, 0.15f, 3.06f, -0.44f, 5.54f, -0.44f);
        mPath.rLineTo(0.18f, 0f);
        mPath.rCubicTo(2.48f, 0.0f, 4.81f, 0.58f, 5.54f, 0.44f);
        mPath.rCubicTo(1.31f, -0.29f, 2.04f, -1.31f, 2.33f, -2.32f);
        mPath.rCubicTo(0.31f, -2.04f, -1.3f, -3.49f, -2.61f, -4.8f);
        mPath.close();
        mPath.moveTo(17.34f, 14.86f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}