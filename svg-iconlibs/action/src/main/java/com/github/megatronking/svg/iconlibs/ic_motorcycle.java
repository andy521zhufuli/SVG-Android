package com.github.megatronking.svg.iconlibs;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class ic_motorcycle extends SVGRenderer {

    public ic_motorcycle(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = dip2px(24.0f);
        mHeight = dip2px(24.0f);
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        final float scaleX = w / 24.0f;
        final float scaleY = h / 24.0f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(19.44f, 9.03f);
        mPath.lineTo(15.41f, 5.0f);
        mPath.lineTo(11.0f, 5.0f);
        mPath.rLineTo(0f, 2.0f);
        mPath.rLineTo(3.59f, 0f);
        mPath.rLineTo(2.0f, 2.0f);
        mPath.lineTo(5.0f, 9.0f);
        mPath.rCubicTo(-2.8f, 0.0f, -5.0f, 2.2f, -5.0f, 5.0f);
        mPath.rCubicTo(0.0f, 2.8000002f, 2.2f, 5.0f, 5.0f, 5.0f);
        mPath.rCubicTo(2.46f, 0.0f, 4.45f, -1.69f, 4.9f, -4.0f);
        mPath.rLineTo(1.65f, 0f);
        mPath.rLineTo(2.77f, -2.77f);
        mPath.rCubicTo(-0.21f, 0.54f, -0.32f, 1.14f, -0.32f, 1.77f);
        mPath.rCubicTo(0.0f, 2.8f, 2.2f, 5.0f, 5.0f, 5.0f);
        mPath.rCubicTo(2.7999992f, 0.0f, 5.0f, -2.2f, 5.0f, -5.0f);
        mPath.rCubicTo(0.0f, -2.65f, -1.97f, -4.77f, -4.56f, -4.97f);
        mPath.close();
        mPath.moveTo(19.44f, 9.03f);
        mPath.moveTo(7.82f, 15.0f);
        mPath.cubicTo(7.4f, 16.15f, 6.28f, 17.0f, 5.0f, 17.0f);
        mPath.rCubicTo(-1.63f, 0.0f, -3.0f, -1.37f, -3.0f, -3.0f);
        mPath.rCubicTo(0.0f, -1.6300001f, 1.37f, -3.0f, 3.0f, -3.0f);
        mPath.rCubicTo(1.28f, 0.0f, 2.4f, 0.85f, 2.82f, 2.0f);
        mPath.lineTo(5.0f, 13.0f);
        mPath.rLineTo(0f, 2.0f);
        mPath.rLineTo(2.82f, 0f);
        mPath.close();
        mPath.moveTo(7.82f, 15.0f);
        mPath.moveTo(19.0f, 17.0f);
        mPath.rCubicTo(-1.66f, 0.0f, -3.0f, -1.34f, -3.0f, -3.0f);
        mPath.rCubicTo(0.0f, -1.6599998f, 1.34f, -3.0f, 3.0f, -3.0f);
        mPath.rCubicTo(1.6599998f, 0.0f, 3.0f, 1.34f, 3.0f, 3.0f);
        mPath.rCubicTo(0.0f, 1.6599998f, -1.34f, 3.0f, -3.0f, 3.0f);
        mPath.close();
        mPath.moveTo(19.0f, 17.0f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}