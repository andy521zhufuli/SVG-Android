package com.github.megatronking.svg.iconlibs;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class ic_g_translate extends SVGRenderer {

    public ic_g_translate(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = dip2px(24.0f);
        mHeight = dip2px(24.0f);
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        final float scaleX = w / 24.0f;
        final float scaleY = h / 24.0f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(20.0f, 5.0f);
        mPath.rLineTo(-9.12f, 0f);
        mPath.lineTo(10.0f, 2.0f);
        mPath.lineTo(4.0f, 2.0f);
        mPath.rCubicTo(-1.1f, 0.0f, -2.0f, 0.9f, -2.0f, 2.0f);
        mPath.rLineTo(0f, 13.0f);
        mPath.rCubicTo(0.0f, 1.1f, 0.9f, 2.0f, 2.0f, 2.0f);
        mPath.rLineTo(7.0f, 0f);
        mPath.rLineTo(1.0f, 3.0f);
        mPath.rLineTo(8.0f, 0f);
        mPath.rCubicTo(1.1f, 0.0f, 2.0f, -0.9f, 2.0f, -2.0f);
        mPath.lineTo(22.0f, 7.0f);
        mPath.rCubicTo(0.0f, -1.1f, -0.9f, -2.0f, -2.0f, -2.0f);
        mPath.close();
        mPath.moveTo(20.0f, 5.0f);
        mPath.moveTo(7.17f, 14.59f);
        mPath.rCubicTo(-2.25f, 0.0f, -4.09f, -1.83f, -4.09f, -4.09f);
        mPath.rCubicTo(0.0f, -2.2600002f, 1.83f, -4.09f, 4.09f, -4.09f);
        mPath.rCubicTo(1.04f, 0.0f, 1.99f, 0.37f, 2.74f, 1.07f);
        mPath.rLineTo(0.07f, 0.06f);
        mPath.rLineTo(-1.23f, 1.18f);
        mPath.rLineTo(-0.06f, -0.05f);
        mPath.rCubicTo(-0.29f, -0.27f, -0.78f, -0.59f, -1.52f, -0.59f);
        mPath.rCubicTo(-1.31f, 0.0f, -2.38f, 1.09f, -2.38f, 2.42f);
        mPath.rCubicTo(0.0f, 1.3299999f, 1.07f, 2.42f, 2.38f, 2.42f);
        mPath.rCubicTo(1.37f, 0.0f, 1.96f, -0.87f, 2.12f, -1.46f);
        mPath.lineTo(7.08f, 11.46f);
        mPath.lineTo(7.08f, 9.91f);
        mPath.rLineTo(3.95f, 0f);
        mPath.rLineTo(0.01f, 0.07f);
        mPath.rCubicTo(0.04f, 0.21f, 0.05f, 0.4f, 0.05f, 0.61f);
        mPath.rCubicTo(0.0f, 2.35f, -1.61f, 4.0f, -3.92f, 4.0f);
        mPath.close();
        mPath.moveTo(7.17f, 14.59f);
        mPath.rMoveTo(6.03f, -1.71f);
        mPath.rCubicTo(0.33f, 0.6f, 0.74f, 1.18f, 1.19f, 1.7f);
        mPath.rLineTo(-0.54f, 0.53f);
        mPath.rLineTo(-0.65f, -2.23f);
        mPath.close();
        mPath.moveTo(13.200001f, 12.88f);
        mPath.rMoveTo(0.77f, -0.76f);
        mPath.rLineTo(-0.99f, 0f);
        mPath.rLineTo(-0.31f, -1.04f);
        mPath.rLineTo(3.99f, 0f);
        mPath.rCubicTo(0.0f, 0.0f, -0.34f, 1.31f, -1.56f, 2.74f);
        mPath.rCubicTo(-0.52f, -0.62f, -0.89f, -1.23f, -1.13f, -1.7f);
        mPath.close();
        mPath.moveTo(13.970001f, 12.12f);
        mPath.moveTo(21.0f, 20.0f);
        mPath.rCubicTo(0.0f, 0.55f, -0.45f, 1.0f, -1.0f, 1.0f);
        mPath.rLineTo(-7.0f, 0f);
        mPath.rLineTo(2.0f, -2.0f);
        mPath.rLineTo(-0.81f, -2.77f);
        mPath.rLineTo(0.92f, -0.92f);
        mPath.lineTo(17.79f, 18.0f);
        mPath.rLineTo(0.73f, -0.73f);
        mPath.rLineTo(-2.71f, -2.68f);
        mPath.rCubicTo(0.9f, -1.03f, 1.6f, -2.25f, 1.92f, -3.51f);
        mPath.lineTo(19.0f, 11.08f);
        mPath.rLineTo(0f, -1.04f);
        mPath.rLineTo(-3.64f, 0f);
        mPath.lineTo(15.36f, 9.0f);
        mPath.rLineTo(-1.04f, 0f);
        mPath.rLineTo(0f, 1.04f);
        mPath.rLineTo(-1.96f, 0f);
        mPath.lineTo(11.18f, 6.0f);
        mPath.lineTo(20.0f, 6.0f);
        mPath.rCubicTo(0.55f, 0.0f, 1.0f, 0.45f, 1.0f, 1.0f);
        mPath.rLineTo(0f, 13.0f);
        mPath.close();
        mPath.moveTo(21.0f, 20.0f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}