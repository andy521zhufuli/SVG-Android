package com.github.megatronking.svg.iconlibs;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class ic_settings_remote extends SVGRenderer {

    public ic_settings_remote(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = dip2px(24.0f);
        mHeight = dip2px(24.0f);
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        final float scaleX = w / 24.0f;
        final float scaleY = h / 24.0f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(15.0f, 9.0f);
        mPath.lineTo(9.0f, 9.0f);
        mPath.rCubicTo(-0.55f, 0.0f, -1.0f, 0.45f, -1.0f, 1.0f);
        mPath.rLineTo(0f, 12.0f);
        mPath.rCubicTo(0.0f, 0.55f, 0.45f, 1.0f, 1.0f, 1.0f);
        mPath.rLineTo(6.0f, 0f);
        mPath.rCubicTo(0.55f, 0.0f, 1.0f, -0.45f, 1.0f, -1.0f);
        mPath.lineTo(16.0f, 10.0f);
        mPath.rCubicTo(0.0f, -0.55f, -0.45f, -1.0f, -1.0f, -1.0f);
        mPath.close();
        mPath.moveTo(15.0f, 9.0f);
        mPath.rMoveTo(-3.0f, 6.0f);
        mPath.rCubicTo(-1.1f, 0.0f, -2.0f, -0.9f, -2.0f, -2.0f);
        mPath.rCubicTo(0.0f, -1.1000004f, 0.9f, -2.0f, 2.0f, -2.0f);
        mPath.rCubicTo(1.1000004f, 0.0f, 2.0f, 0.9f, 2.0f, 2.0f);
        mPath.rCubicTo(0.0f, 1.1000004f, -0.9f, 2.0f, -2.0f, 2.0f);
        mPath.close();
        mPath.moveTo(12.0f, 15.0f);
        mPath.moveTo(7.05f, 6.05f);
        mPath.rLineTo(1.41f, 1.41f);
        mPath.cubicTo(9.37f, 6.56f, 10.62f, 6.0f, 12.0f, 6.0f);
        mPath.rCubicTo(1.3800001f, 0.0f, 2.63f, 0.56f, 3.54f, 1.46f);
        mPath.rLineTo(1.41f, -1.41f);
        mPath.cubicTo(15.68f, 4.78f, 13.93f, 4.0f, 12.0f, 4.0f);
        mPath.rCubicTo(-1.9300003f, 0.0f, -3.68f, 0.78f, -4.95f, 2.05f);
        mPath.close();
        mPath.moveTo(7.05f, 6.05f);
        mPath.moveTo(12.0f, 0.0f);
        mPath.cubicTo(8.96f, 0.0f, 6.21f, 1.23f, 4.22f, 3.22f);
        mPath.rLineTo(1.41f, 1.41f);
        mPath.cubicTo(7.26f, 3.01f, 9.51f, 2.0f, 12.0f, 2.0f);
        mPath.rCubicTo(2.4899998f, 0.0f, 4.74f, 1.01f, 6.36f, 2.64f);
        mPath.rLineTo(1.41f, -1.41f);
        mPath.cubicTo(17.79f, 1.23f, 15.04f, 0.0f, 12.0f, 0.0f);
        mPath.close();
        mPath.moveTo(12.0f, 0.0f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}