package com.github.megatronking.svg.iconlibs;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class ic_settings_applications extends SVGRenderer {

    public ic_settings_applications(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = dip2px(24.0f);
        mHeight = dip2px(24.0f);
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        final float scaleX = w / 24.0f;
        final float scaleY = h / 24.0f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(12.0f, 10.0f);
        mPath.rCubicTo(-1.1f, 0.0f, -2.0f, 0.9f, -2.0f, 2.0f);
        mPath.rCubicTo(0.0f, 1.1000004f, 0.9f, 2.0f, 2.0f, 2.0f);
        mPath.rCubicTo(1.1000004f, 0.0f, 2.0f, -0.9f, 2.0f, -2.0f);
        mPath.rCubicTo(0.0f, -1.1000004f, -0.9f, -2.0f, -2.0f, -2.0f);
        mPath.close();
        mPath.moveTo(12.0f, 10.0f);
        mPath.rMoveTo(7.0f, -7.0f);
        mPath.lineTo(5.0f, 3.0f);
        mPath.rCubicTo(-1.11f, 0.0f, -2.0f, 0.9f, -2.0f, 2.0f);
        mPath.rLineTo(0f, 14.0f);
        mPath.rCubicTo(0.0f, 1.1f, 0.89f, 2.0f, 2.0f, 2.0f);
        mPath.rLineTo(14.0f, 0f);
        mPath.rCubicTo(1.11f, 0.0f, 2.0f, -0.9f, 2.0f, -2.0f);
        mPath.lineTo(21.0f, 5.0f);
        mPath.rCubicTo(0.0f, -1.1f, -0.89f, -2.0f, -2.0f, -2.0f);
        mPath.close();
        mPath.moveTo(19.0f, 3.0f);
        mPath.rMoveTo(-1.75f, 9.0f);
        mPath.rCubicTo(0.0f, 0.23f, -0.02f, 0.46f, -0.05f, 0.68f);
        mPath.rLineTo(1.48f, 1.16f);
        mPath.rCubicTo(0.13f, 0.11f, 0.17f, 0.3f, 0.08f, 0.45f);
        mPath.rLineTo(-1.4f, 2.42f);
        mPath.rCubicTo(-0.09f, 0.15f, -0.27f, 0.21f, -0.43f, 0.15f);
        mPath.rLineTo(-1.74f, -0.7f);
        mPath.rCubicTo(-0.36f, 0.28f, -0.76f, 0.51f, -1.18f, 0.69f);
        mPath.rLineTo(-0.26f, 1.85f);
        mPath.rCubicTo(-0.03f, 0.17f, -0.18f, 0.3f, -0.35f, 0.3f);
        mPath.rLineTo(-2.8f, 0f);
        mPath.rCubicTo(-0.17f, 0.0f, -0.32f, -0.13f, -0.35f, -0.29f);
        mPath.rLineTo(-0.26f, -1.85f);
        mPath.rCubicTo(-0.43f, -0.18f, -0.82f, -0.41f, -1.18f, -0.69f);
        mPath.rLineTo(-1.74f, 0.7f);
        mPath.rCubicTo(-0.16f, 0.06f, -0.34f, 0.0f, -0.43f, -0.15f);
        mPath.rLineTo(-1.4f, -2.42f);
        mPath.rCubicTo(-0.09f, -0.15f, -0.05f, -0.34f, 0.08f, -0.45f);
        mPath.rLineTo(1.48f, -1.16f);
        mPath.rCubicTo(-0.03f, -0.23f, -0.05f, -0.46f, -0.05f, -0.69f);
        mPath.rCubicTo(0.0f, -0.23f, 0.02f, -0.46f, 0.05f, -0.68f);
        mPath.rLineTo(-1.48f, -1.16f);
        mPath.rCubicTo(-0.13f, -0.11f, -0.17f, -0.3f, -0.08f, -0.45f);
        mPath.rLineTo(1.4f, -2.42f);
        mPath.rCubicTo(0.09f, -0.15f, 0.27f, -0.21f, 0.43f, -0.15f);
        mPath.rLineTo(1.74f, 0.7f);
        mPath.rCubicTo(0.36f, -0.28f, 0.76f, -0.51f, 1.18f, -0.69f);
        mPath.rLineTo(0.26f, -1.85f);
        mPath.rCubicTo(0.03f, -0.17f, 0.18f, -0.3f, 0.35f, -0.3f);
        mPath.rLineTo(2.8f, 0f);
        mPath.rCubicTo(0.17f, 0.0f, 0.32f, 0.13f, 0.35f, 0.29f);
        mPath.rLineTo(0.26f, 1.85f);
        mPath.rCubicTo(0.43f, 0.18f, 0.82f, 0.41f, 1.18f, 0.69f);
        mPath.rLineTo(1.74f, -0.7f);
        mPath.rCubicTo(0.16f, -0.06f, 0.34f, 0.0f, 0.43f, 0.15f);
        mPath.rLineTo(1.4f, 2.42f);
        mPath.rCubicTo(0.09f, 0.15f, 0.05f, 0.34f, -0.08f, 0.45f);
        mPath.rLineTo(-1.48f, 1.16f);
        mPath.rCubicTo(0.03f, 0.23f, 0.05f, 0.46f, 0.05f, 0.69f);
        mPath.close();
        mPath.moveTo(17.25f, 12.0f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}