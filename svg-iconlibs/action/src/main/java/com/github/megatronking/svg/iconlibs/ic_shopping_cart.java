package com.github.megatronking.svg.iconlibs;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class ic_shopping_cart extends SVGRenderer {

    public ic_shopping_cart(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = dip2px(24.0f);
        mHeight = dip2px(24.0f);
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        final float scaleX = w / 24.0f;
        final float scaleY = h / 24.0f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(7.0f, 18.0f);
        mPath.rCubicTo(-1.1f, 0.0f, -1.99f, 0.9f, -1.99f, 2.0f);
        mPath.cubicTo(5.01f, 21.1f, 5.9f, 22.0f, 7.0f, 22.0f);
        mPath.rCubicTo(1.0999999f, 0.0f, 2.0f, -0.9f, 2.0f, -2.0f);
        mPath.rCubicTo(0.0f, -1.1000004f, -0.9f, -2.0f, -2.0f, -2.0f);
        mPath.close();
        mPath.moveTo(7.0f, 18.0f);
        mPath.moveTo(1.0f, 2.0f);
        mPath.rLineTo(0f, 2.0f);
        mPath.rLineTo(2.0f, 0f);
        mPath.rLineTo(3.6f, 7.59f);
        mPath.rLineTo(-1.35f, 2.45f);
        mPath.rCubicTo(-0.16f, 0.28f, -0.25f, 0.61f, -0.25f, 0.96f);
        mPath.rCubicTo(0.0f, 1.1f, 0.9f, 2.0f, 2.0f, 2.0f);
        mPath.rLineTo(12.0f, 0f);
        mPath.rLineTo(0f, -2.0f);
        mPath.lineTo(7.42f, 15.0f);
        mPath.rCubicTo(-0.14f, 0.0f, -0.25f, -0.11f, -0.25f, -0.25f);
        mPath.rLineTo(0.03f, -0.12f);
        mPath.rLineTo(0.9f, -1.63f);
        mPath.rLineTo(7.45f, 0f);
        mPath.rCubicTo(0.75f, 0.0f, 1.41f, -0.41f, 1.75f, -1.03f);
        mPath.rLineTo(3.58f, -6.49f);
        mPath.rCubicTo(0.08f, -0.14f, 0.12f, -0.31f, 0.12f, -0.48f);
        mPath.rCubicTo(0.0f, -0.55f, -0.45f, -1.0f, -1.0f, -1.0f);
        mPath.lineTo(5.21f, 4.0000005f);
        mPath.rLineTo(-0.94f, -2.0f);
        mPath.lineTo(1.0f, 2.0000005f);
        mPath.close();
        mPath.moveTo(1.0f, 2.0f);
        mPath.rMoveTo(16.0f, 16.0f);
        mPath.rCubicTo(-1.1f, 0.0f, -1.99f, 0.9f, -1.99f, 2.0f);
        mPath.rCubicTo(0.0f, 1.1000004f, 0.89f, 2.0f, 1.99f, 2.0f);
        mPath.rCubicTo(1.0999994f, 0.0f, 2.0f, -0.9f, 2.0f, -2.0f);
        mPath.rCubicTo(0.0f, -1.1000004f, -0.9f, -2.0f, -2.0f, -2.0f);
        mPath.close();
        mPath.moveTo(17.0f, 18.0f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-16777216, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}